
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONleftCONJUNCIONDISYUNCIONrightNEGACIONnonassocMENOR_IGUALMENORMAYOR_IGUALMAYORIGUALASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    bool : TR\n            | FLnum : ENTERO\n           | DECIMALident : CADENA_NO_COMILLAS\n             | CADENA_NO_COMILLAS PUNTO ident\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident\n             \n    declare : LET id\n    id : variable\n          | variable COMA id\n          | variable ASIGNACION valor\n          | variable ASIGNACION valor COMA idvariable : CADENA_NO_COMILLAS \n                | CADENA_NO_COMILLAS DOS_PUNTOS tipo\n    assign : variable ASIGNACION valor\n    valor : ident\n             | num\n             | operacion\n             | bool\n             | NULL\n             | ajson_v\n             | CARACTER\n             | function_call\n             | PARENTESIS_ABRE valor PARENTESIS_CIERRA\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tvalor_t : tipo\n               | ajsonclave : CADENA_NO_COMILLAS\n             | CADENA_COMILLASajson_v : LLAVE_ABRE lista_v LLAVE_CIERRAlista_v : elemento_v\n               | elemento_v COMA \n               | elemento_v COMA lista_velemento_v : clave_v DOS_PUNTOS valorclave_v : CADENA_NO_COMILLAS\n               | CADENA_COMILLASoperacion : aritmetica\n                 | booleana\n                 | comparacionaritmetica : valor SUMA valor\n                  | valor RESTA valor\n                  | valor MULTIPLICACION valor\n                  | valor DIVISION valorcomparacion : valor MAYOR valor\n                   | valor MENOR valor\n                   | valor MAYOR_IGUAL valor\n                   | valor MENOR_IGUAL valor\n                   | valor IGUAL valorbooleana : valor CONJUNCION valor\n                | valor DISYUNCION valor\n                | NEGACION valortipo : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n            | CADENA_NO_COMILLAS\n    \n    condition : IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    loop : WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA\n                  | CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA\n    arg : valor\n           | valor COMA arg'
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,19,20,29,141,142,160,164,166,167,168,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-76,-78,-77,-82,-80,-81,-79,]),'TYPE':([0,5,9,10,11,19,118,119,141,142,144,147,150,160,164,166,167,168,],[12,12,-11,-12,-13,12,12,12,-76,-78,12,12,12,-77,-82,-80,-81,-79,]),'LET':([0,5,9,10,11,19,118,119,141,142,144,147,150,160,164,166,167,168,],[14,14,-11,-12,-13,14,14,14,-76,-78,14,14,14,-77,-82,-80,-81,-79,]),'IF':([0,5,9,10,11,19,118,119,141,142,144,147,150,160,164,166,167,168,],[16,16,-11,-12,-13,16,16,16,-76,-78,16,16,16,-77,-82,-80,-81,-79,]),'WHILE':([0,5,9,10,11,19,118,119,141,142,144,147,150,160,164,166,167,168,],[17,17,-11,-12,-13,17,17,17,-76,-78,17,17,17,-77,-82,-80,-81,-79,]),'FUNCTION':([0,5,9,10,11,19,118,119,141,142,144,147,150,160,164,166,167,168,],[18,18,-11,-12,-13,18,18,18,-76,-78,18,18,18,-77,-82,-80,-81,-79,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,19,22,25,26,27,37,38,48,57,58,61,63,66,67,68,69,70,71,72,73,74,75,76,78,80,96,116,117,118,119,121,123,124,128,133,139,141,142,144,147,149,150,152,153,156,160,164,166,167,168,],[13,13,-11,-12,-13,21,13,28,13,31,49,49,49,13,49,49,84,49,13,94,49,49,49,49,49,49,49,49,49,49,49,109,49,13,84,49,13,13,31,94,31,49,31,109,-76,-78,13,13,49,13,49,49,49,-77,-82,-80,-81,-79,]),'PUNTO_Y_COMA':([4,6,7,8,13,23,24,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,62,64,65,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,115,122,125,126,127,145,154,157,158,161,],[19,-8,-9,-10,-27,-22,-23,-75,-28,-71,-72,-73,-74,-29,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,-39,-24,-25,-70,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,-49,-40,-26,-20,-83,-21,159,162,163,165,]),'LLAVE_CIERRA':([5,9,10,11,19,20,29,31,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,81,82,86,91,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,115,116,122,123,126,127,129,130,131,132,135,136,137,138,141,142,145,155,159,160,162,163,164,165,166,167,168,],[-6,-11,-12,-13,-4,-7,-5,-75,-71,-72,-73,-74,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,115,-50,-70,122,-41,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,-49,-51,-40,-42,-20,-83,-52,-53,141,142,-43,-44,-45,-46,-76,-78,-21,160,164,-77,166,167,-82,168,-80,-81,-79,]),'RETURN':([5,9,10,11,19,20,29,141,142,144,147,148,151,160,164,166,167,168,],[-6,-11,-12,-13,-4,-7,-5,-76,-78,149,152,153,156,-77,-82,-80,-81,-79,]),'ASIGNACION':([13,15,21,24,31,32,33,34,35,36,],[-27,25,30,38,-75,-28,-71,-72,-73,-74,]),'COMA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,65,82,86,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,122,126,127,130,136,137,138,145,],[-27,37,-75,-28,-71,-72,-73,-74,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,96,116,-70,123,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,128,-49,-40,-20,-83,-53,-44,-45,-46,-21,]),'PARENTESIS_CIERRA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,61,64,65,77,80,86,89,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,125,126,127,140,145,],[-27,-23,-75,-28,-71,-72,-73,-74,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,87,88,90,-24,-25,108,113,-70,120,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,127,-84,-85,-49,-26,-20,-83,-86,-21,]),'DOS_PUNTOS':([13,83,84,85,90,93,94,95,120,],[22,117,-54,-55,121,124,-47,-48,133,]),'PARENTESIS_ABRE':([16,17,25,26,27,28,38,48,49,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[26,27,48,48,48,61,48,48,80,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'INT':([22,121,124,133,],[33,33,33,33,]),'FLOAT':([22,121,124,133,],[34,34,34,34,]),'CHARACTER':([22,121,124,133,],[35,35,35,35,]),'BOOLEAN':([22,121,124,133,],[36,36,36,36,]),'NULL':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'CARACTER':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ENTERO':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'DECIMAL':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TR':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FL':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LLAVE_ABRE':([25,26,27,30,31,33,34,35,36,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,87,88,117,124,128,134,143,146,149,152,153,156,],[57,57,57,63,-75,-71,-72,-73,-74,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,118,119,57,63,57,144,147,150,57,57,57,57,]),'NEGACION':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'SUMA':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[66,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,66,66,66,66,-70,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,66,-49,-20,-83,66,-21,66,66,66,66,]),'RESTA':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[67,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,67,67,67,67,-70,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,67,-49,-20,-83,67,-21,67,67,67,67,]),'MULTIPLICACION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[68,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,68,68,68,68,-70,68,68,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,68,-49,-20,-83,68,-21,68,68,68,68,]),'DIVISION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[69,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,69,69,69,69,-70,69,69,-61,-62,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,69,-49,-20,-83,69,-21,69,69,69,69,]),'CONJUNCION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[70,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,70,70,70,70,-70,70,70,70,70,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,70,-49,-20,-83,70,-21,70,70,70,70,]),'DISYUNCION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[71,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,71,71,71,71,-70,71,71,71,71,-68,-69,-63,-64,-65,-66,-67,-38,-18,-19,-84,71,-49,-20,-83,71,-21,71,71,71,71,]),'MAYOR':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[72,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,72,72,72,72,72,72,72,72,72,72,72,None,None,None,None,None,-38,-18,-19,-84,72,-49,-20,-83,72,-21,72,72,72,72,]),'MENOR':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[73,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,73,73,73,73,73,73,73,73,73,73,73,None,None,None,None,None,-38,-18,-19,-84,73,-49,-20,-83,73,-21,73,73,73,73,]),'MAYOR_IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[74,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,74,74,74,74,74,74,74,74,74,74,74,None,None,None,None,None,-38,-18,-19,-84,74,-49,-20,-83,74,-21,74,74,74,74,]),'MENOR_IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[75,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,75,75,75,75,75,75,75,75,75,75,75,None,None,None,None,None,-38,-18,-19,-84,75,-49,-20,-83,75,-21,75,75,75,75,]),'IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,126,127,130,145,154,157,158,161,],[76,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,76,76,76,76,76,76,76,76,76,76,76,None,None,None,None,None,-38,-18,-19,-84,76,-49,-20,-83,76,-21,76,76,76,76,]),'PUNTO':([49,109,126,],[78,78,139,]),'CORCHETE_ABRE':([49,109,],[79,79,]),'CADENA_COMILLAS':([57,63,79,116,123,],[85,95,111,85,95,]),'CORCHETE_CIERRA':([111,],[126,]),'ELSE':([141,],[146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,19,118,119,144,147,150,],[2,20,29,131,132,148,151,155,]),'empty':([0,],[3,]),'content':([0,5,19,118,119,144,147,150,],[4,4,4,4,4,4,4,4,]),'no_semicolon':([0,5,19,118,119,144,147,150,],[5,5,5,5,5,5,5,5,]),'define':([0,5,19,118,119,144,147,150,],[6,6,6,6,6,6,6,6,]),'declare':([0,5,19,118,119,144,147,150,],[7,7,7,7,7,7,7,7,]),'assign':([0,5,19,118,119,144,147,150,],[8,8,8,8,8,8,8,8,]),'condition':([0,5,19,118,119,144,147,150,],[9,9,9,9,9,9,9,9,]),'loop':([0,5,19,118,119,144,147,150,],[10,10,10,10,10,10,10,10,]),'function_def':([0,5,19,118,119,144,147,150,],[11,11,11,11,11,11,11,11,]),'variable':([0,5,14,19,37,61,96,118,119,144,147,150,],[15,15,24,15,24,24,24,15,15,15,15,15,]),'id':([14,37,61,96,],[23,64,89,125,]),'tipo':([22,121,124,133,],[32,134,137,143,]),'valor':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[39,59,60,65,77,86,97,98,99,100,101,102,103,104,105,106,107,114,130,114,154,157,158,161,]),'ident':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,78,80,117,128,139,149,152,153,156,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,110,40,40,40,145,40,40,40,40,]),'num':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'operacion':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'bool':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ajson_v':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'function_call':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'aritmetica':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'booleana':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'comparacion':([25,26,27,38,48,58,66,67,68,69,70,71,72,73,74,75,76,80,117,128,149,152,153,156,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ajson':([30,124,],[62,138,]),'lista_v':([57,116,],[81,129,]),'elemento_v':([57,116,],[82,82,]),'clave_v':([57,116,],[83,83,]),'lista':([63,123,],[91,135,]),'elemento':([63,123,],[92,92,]),'clave':([63,123,],[93,93,]),'arg':([80,128,],[112,140,]),'valor_t':([124,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',15),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',16),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',20),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',25),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',26),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',27),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',28),
  ('content -> define','content',1,'p_content','parser_ajs.py',34),
  ('content -> declare','content',1,'p_content','parser_ajs.py',35),
  ('content -> assign','content',1,'p_content','parser_ajs.py',36),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',42),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',43),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',44),
  ('bool -> TR','bool',1,'p_bool','parser_ajs.py',51),
  ('bool -> FL','bool',1,'p_bool','parser_ajs.py',52),
  ('num -> ENTERO','num',1,'p_num','parser_ajs.py',56),
  ('num -> DECIMAL','num',1,'p_num','parser_ajs.py',57),
  ('ident -> CADENA_NO_COMILLAS','ident',1,'p_ident','parser_ajs.py',61),
  ('ident -> CADENA_NO_COMILLAS PUNTO ident','ident',3,'p_ident','parser_ajs.py',62),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA','ident',4,'p_ident','parser_ajs.py',63),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident','ident',6,'p_ident','parser_ajs.py',64),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',72),
  ('id -> variable','id',1,'p_id','parser_ajs.py',77),
  ('id -> variable COMA id','id',3,'p_id','parser_ajs.py',78),
  ('id -> variable ASIGNACION valor','id',3,'p_id','parser_ajs.py',79),
  ('id -> variable ASIGNACION valor COMA id','id',5,'p_id','parser_ajs.py',80),
  ('variable -> CADENA_NO_COMILLAS','variable',1,'p_variable','parser_ajs.py',84),
  ('variable -> CADENA_NO_COMILLAS DOS_PUNTOS tipo','variable',3,'p_variable','parser_ajs.py',85),
  ('assign -> variable ASIGNACION valor','assign',3,'p_assign','parser_ajs.py',92),
  ('valor -> ident','valor',1,'p_valor','parser_ajs.py',97),
  ('valor -> num','valor',1,'p_valor','parser_ajs.py',98),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',99),
  ('valor -> bool','valor',1,'p_valor','parser_ajs.py',100),
  ('valor -> NULL','valor',1,'p_valor','parser_ajs.py',101),
  ('valor -> ajson_v','valor',1,'p_valor','parser_ajs.py',102),
  ('valor -> CARACTER','valor',1,'p_valor','parser_ajs.py',103),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',104),
  ('valor -> PARENTESIS_ABRE valor PARENTESIS_CIERRA','valor',3,'p_valor','parser_ajs.py',105),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',111),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',116),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',120),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',121),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',122),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',126),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',130),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',131),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave','parser_ajs.py',135),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave','parser_ajs.py',136),
  ('ajson_v -> LLAVE_ABRE lista_v LLAVE_CIERRA','ajson_v',3,'p_ajson_v','parser_ajs.py',140),
  ('lista_v -> elemento_v','lista_v',1,'p_lista_v','parser_ajs.py',144),
  ('lista_v -> elemento_v COMA','lista_v',2,'p_lista_v','parser_ajs.py',145),
  ('lista_v -> elemento_v COMA lista_v','lista_v',3,'p_lista_v','parser_ajs.py',146),
  ('elemento_v -> clave_v DOS_PUNTOS valor','elemento_v',3,'p_elemento_v','parser_ajs.py',150),
  ('clave_v -> CADENA_NO_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',154),
  ('clave_v -> CADENA_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',155),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',159),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',160),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',161),
  ('aritmetica -> valor SUMA valor','aritmetica',3,'p_aritmetica','parser_ajs.py',166),
  ('aritmetica -> valor RESTA valor','aritmetica',3,'p_aritmetica','parser_ajs.py',167),
  ('aritmetica -> valor MULTIPLICACION valor','aritmetica',3,'p_aritmetica','parser_ajs.py',168),
  ('aritmetica -> valor DIVISION valor','aritmetica',3,'p_aritmetica','parser_ajs.py',169),
  ('comparacion -> valor MAYOR valor','comparacion',3,'p_comparacion','parser_ajs.py',183),
  ('comparacion -> valor MENOR valor','comparacion',3,'p_comparacion','parser_ajs.py',184),
  ('comparacion -> valor MAYOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',185),
  ('comparacion -> valor MENOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',186),
  ('comparacion -> valor IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',187),
  ('booleana -> valor CONJUNCION valor','booleana',3,'p_booleana','parser_ajs.py',199),
  ('booleana -> valor DISYUNCION valor','booleana',3,'p_booleana','parser_ajs.py',200),
  ('booleana -> NEGACION valor','booleana',2,'p_booleana','parser_ajs.py',201),
  ('tipo -> INT','tipo',1,'p_tipo','parser_ajs.py',212),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser_ajs.py',213),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','parser_ajs.py',214),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser_ajs.py',215),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo','parser_ajs.py',216),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',222),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',223),
  ('loop -> WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',229),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',235),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',236),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',237),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',11,'p_function_def','parser_ajs.py',238),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',244),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA','function_call',3,'p_function_call','parser_ajs.py',245),
  ('arg -> valor','arg',1,'p_arg','parser_ajs.py',250),
  ('arg -> valor COMA arg','arg',3,'p_arg','parser_ajs.py',251),
]
