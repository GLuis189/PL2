
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRA\n             | LLAVE_ABRE LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tclave : CADENA_NO_COMILLAS\n             | CADENA_COMILLASvalor_t : CADENA_COMILLAS\n                | num\n                | operacion\n                | bool\n                | NULL\n                | ajson\n                | tipo\n                | CARACTER\n                | CADENA_NO_COMILLAS\n    operacion : aritmetica\n                 | booleana\n                 | comparacion\n                 | PARENTESIS_ABRE operacion PARENTESIS_CIERRAaritmetica : ex operador1 ex\n                  | ex2 operador2 ex2operador1 : SUMA\n                 | RESTAoperador2 : MULTIPLICACION\n                 | DIVISIONcomparacion : ex comparador ex\n                   | ex1 IGUAL ex1comparador : MAYOR \n                  | MENOR \n                  | MAYOR_IGUAL\n                  | MENOR_IGUAL\n    booleana : ex3 comparador2 ex3\n                | NEGACION ex3comparador2 : CONJUNCION\n                   | DISYUNCION\n    ex : num\n          | CHARACTER\n          | CADENA_NO_COMILLAS\n          | aritmetica\n          | comparacion\n          | PARENTESIS_ABRE ex PARENTESIS_CIERRAex1 : ex\n           | bool\n           | booleana\n           | aritmetica\n           | comparacion\n           | PARENTESIS_ABRE ex1 PARENTESIS_CIERRAex2 : num\n           | CADENA_NO_COMILLAS\n           | aritmetica\n           | PARENTESIS_ABRE ex2 PARENTESIS_CIERRAex3 : bool\n           | CADENA_NO_COMILLAS\n           | comparacion\n           | PARENTESIS_ABRE ex3 PARENTESIS_CIERRAbool : TR\n            | FLnum : ENTERO\n           | DECIMALtipo : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n            | CADENA_NO_COMILLAS\n    \n    declare : LET id\n    id : variable\n          | variable COMA idvariable : CADENA_NO_COMILLAS DOS_PUNTOS tipo\n                | CADENA_NO_COMILLAS\n    assign : variable ASIGNACION valor\n    valor : CADENA_COMILLAS\n             | num\n             | operacion\n             | bool\n             | NULL\n             | ajson\n             | CARACTER\n             | CADENA_NO_COMILLAS\n             | function_call\n    \n    condition : IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    expersion : ex3\n              | booleana\n              | function_call\n    \n    loop : WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE valor PARENTESIS_CIERRA\n                  | CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA\n    '
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,19,20,29,163,164,181,185,187,188,189,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-96,-101,-97,-105,-103,-104,-102,]),'TYPE':([0,5,9,10,11,19,142,143,163,164,166,168,171,181,185,187,188,189,],[12,12,-11,-12,-13,12,12,12,-96,-101,12,12,12,-97,-105,-103,-104,-102,]),'LET':([0,5,9,10,11,19,142,143,163,164,166,168,171,181,185,187,188,189,],[14,14,-11,-12,-13,14,14,14,-96,-101,14,14,14,-97,-105,-103,-104,-102,]),'IF':([0,5,9,10,11,19,142,143,163,164,166,168,171,181,185,187,188,189,],[16,16,-11,-12,-13,16,16,16,-96,-101,16,16,16,-97,-105,-103,-104,-102,]),'WHILE':([0,5,9,10,11,19,142,143,163,164,166,168,171,181,185,187,188,189,],[17,17,-11,-12,-13,17,17,17,-96,-101,17,17,17,-97,-105,-103,-104,-102,]),'FUNCTION':([0,5,9,10,11,19,142,143,163,164,166,168,171,181,185,187,188,189,],[18,18,-11,-12,-13,18,18,18,-96,-101,18,18,18,-97,-105,-103,-104,-102,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,19,22,25,26,27,37,53,56,60,63,75,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,122,123,127,134,140,142,143,145,161,163,164,166,168,170,171,173,174,177,181,185,187,188,189,],[13,13,-11,-12,-13,21,13,28,13,31,46,69,69,13,84,89,106,106,13,46,84,84,-38,-39,-44,-45,-46,-47,132,-40,-41,106,-50,-51,141,89,157,84,132,141,13,13,31,31,-96,-101,13,13,46,13,46,46,46,-97,-105,-103,-104,-102,]),'PUNTO_Y_COMA':([4,6,7,8,13,23,24,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,62,68,70,72,76,77,84,86,105,106,107,115,116,117,118,119,120,121,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,146,175,178,179,182,],[19,-8,-9,-10,-85,-81,-82,-80,-84,-76,-77,-78,-79,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-74,-75,-32,-33,-34,-72,-73,-53,-68,-70,-52,-14,-83,-54,-16,-49,-69,-60,-107,-35,-57,-67,-71,-63,-15,-36,-55,-56,-59,-42,-37,-64,-65,-66,-48,-43,-58,-55,-56,-54,-106,180,183,184,186,]),'LLAVE_CIERRA':([5,9,10,11,19,20,29,33,34,36,48,49,50,51,52,54,55,56,62,68,70,72,84,85,86,87,105,106,107,116,117,118,119,120,121,122,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,176,180,181,183,184,185,186,187,188,189,],[-6,-11,-12,-13,-4,-7,-5,-76,-77,-79,-74,-75,-32,-33,-34,-72,-73,86,-53,-68,-70,-52,-54,121,-16,-17,-49,-69,-60,-35,-57,-67,-71,-63,-15,-18,-36,-55,-56,-59,-42,-37,-64,-65,-66,-48,-43,-58,-55,-56,-54,-19,-20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-78,163,164,-96,-101,181,185,-97,187,188,-105,189,-103,-104,-102,]),'RETURN':([5,9,10,11,19,20,29,163,164,166,168,169,172,181,185,187,188,189,],[-6,-11,-12,-13,-4,-7,-5,-96,-101,170,173,174,177,-97,-105,-103,-104,-102,]),'DOS_PUNTOS':([13,88,89,90,113,144,],[22,123,-21,-22,145,161,]),'ASIGNACION':([13,15,21,31,32,33,34,35,36,],[-85,25,30,-80,-84,-76,-77,-78,-79,]),'COMA':([13,24,31,32,33,34,35,36,48,49,50,51,52,54,55,62,68,70,72,84,86,87,105,106,107,116,117,118,119,120,121,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,148,149,150,151,152,153,154,155,156,157,158,],[-85,37,-80,-84,-76,-77,-78,-79,-74,-75,-32,-33,-34,-72,-73,-53,-68,-70,-52,-54,-16,122,-49,-69,-60,-35,-57,-67,-71,-63,-15,-36,-55,-56,-59,-42,-37,-64,-65,-66,-48,-43,-58,-55,-56,-54,-20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-78,]),'PARENTESIS_CIERRA':([13,24,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,62,64,65,66,67,68,69,70,72,73,74,75,77,78,79,80,81,82,83,84,86,105,106,107,109,112,114,115,116,117,118,119,120,121,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,146,],[-85,-82,-80,-84,-76,-77,-78,-79,-87,-88,-89,-90,-91,-92,-93,-94,-95,-74,-75,-32,-33,-34,-72,-73,-53,110,-98,-99,-100,-59,-69,-56,-52,-55,111,113,-83,115,116,117,118,119,120,-54,-16,-49,-54,-60,117,144,146,-107,-35,-57,-67,-71,-63,-15,-36,-55,-56,-59,-42,-37,-52,-54,-55,-48,-43,-58,-55,-56,-54,-106,]),'PARENTESIS_ABRE':([16,17,25,26,27,28,46,53,60,63,69,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[26,27,53,63,63,75,78,53,63,63,78,53,127,127,-38,-39,-44,-45,-46,-47,134,-40,-41,63,-50,-51,140,53,127,134,140,53,53,53,53,]),'INT':([22,123,145,161,],[33,33,33,33,]),'FLOAT':([22,123,145,161,],[34,34,34,34,]),'CHARACTER':([22,25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,145,161,170,173,174,177,],[35,62,62,62,62,62,62,62,62,62,-38,-39,-44,-45,-46,-47,62,-40,-41,62,-50,-51,62,158,62,62,62,35,35,62,62,62,62,]),'BOOLEAN':([22,123,145,161,],[36,36,36,36,]),'CADENA_COMILLAS':([25,56,78,122,123,170,173,174,177,],[39,90,39,90,149,39,39,39,39,]),'NULL':([25,78,123,170,173,174,177,],[43,43,153,43,43,43,43,]),'CARACTER':([25,78,123,170,173,174,177,],[45,45,156,45,45,45,45,]),'ENTERO':([25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[48,48,48,48,48,48,48,48,48,-38,-39,-44,-45,-46,-47,48,-40,-41,48,-50,-51,48,48,48,48,48,48,48,48,48,]),'DECIMAL':([25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[49,49,49,49,49,49,49,49,49,-38,-39,-44,-45,-46,-47,49,-40,-41,49,-50,-51,49,49,49,49,49,49,49,49,49,]),'TR':([25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[54,54,54,54,54,54,54,54,54,-38,-39,-44,-45,-46,-47,54,-40,-41,54,-50,-51,54,54,54,54,54,54,54,54,54,]),'FL':([25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[55,55,55,55,55,55,55,55,55,-38,-39,-44,-45,-46,-47,55,-40,-41,55,-50,-51,55,55,55,55,55,55,55,55,55,]),'LLAVE_ABRE':([25,30,31,33,34,35,36,78,110,111,123,162,165,167,170,173,174,177,],[56,56,-80,-76,-77,-78,-79,56,142,143,56,166,168,171,56,56,56,56,]),'NEGACION':([25,26,27,53,60,63,78,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,123,127,134,140,170,173,174,177,],[60,60,60,60,60,60,60,60,60,-38,-39,-44,-45,-46,-47,60,-40,-41,60,-50,-51,60,60,60,60,60,60,60,60,60,]),'SUMA':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,93,-53,-68,-54,-56,93,-52,-55,93,-54,-49,-54,-60,93,-57,-67,-71,-63,93,-55,-56,-59,93,-37,-52,-54,-55,-48,-43,93,-55,-56,-54,-52,-54,-53,]),'RESTA':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,94,-53,-68,-54,-56,94,-52,-55,94,-54,-49,-54,-60,94,-57,-67,-71,-63,94,-55,-56,-59,94,-37,-52,-54,-55,-48,-43,94,-55,-56,-54,-52,-54,-53,]),'MAYOR':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,95,-53,-68,-54,-56,95,-52,-55,95,-54,-49,-54,-60,95,-57,-67,-71,-63,95,-55,-56,-59,95,-37,-52,-54,-55,-48,-43,95,-55,-56,-54,-52,-54,-53,]),'MENOR':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,96,-53,-68,-54,-56,96,-52,-55,96,-54,-49,-54,-60,96,-57,-67,-71,-63,96,-55,-56,-59,96,-37,-52,-54,-55,-48,-43,96,-55,-56,-54,-52,-54,-53,]),'MAYOR_IGUAL':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,97,-53,-68,-54,-56,97,-52,-55,97,-54,-49,-54,-60,97,-57,-67,-71,-63,97,-55,-56,-59,97,-37,-52,-54,-55,-48,-43,97,-55,-56,-54,-52,-54,-53,]),'MENOR_IGUAL':([40,46,48,49,50,52,54,55,57,62,68,69,70,71,72,73,80,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,158,],[-52,-54,-74,-75,-55,-56,-72,-73,98,-53,-68,-54,-56,98,-52,-55,98,-54,-49,-54,-60,98,-57,-67,-71,-63,98,-55,-56,-59,98,-37,-52,-54,-55,-48,-43,98,-55,-56,-54,-52,-54,-53,]),'IGUAL':([40,42,46,48,49,50,51,52,54,55,57,61,62,66,68,69,70,71,72,73,80,83,84,105,106,107,109,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,152,157,158,],[-52,-59,-54,-74,-75,-55,-60,-56,-72,-73,-58,108,-53,-60,-59,-54,-56,-58,-52,-55,-58,108,-54,-49,-54,-60,-58,-57,-67,-71,-63,-36,-55,-56,-59,-42,-37,-52,-54,-55,-48,108,-58,-55,-56,-54,-52,-59,-54,-53,]),'MULTIPLICACION':([40,46,48,49,50,54,55,58,62,68,69,70,72,73,81,84,105,106,107,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,],[-64,-65,-74,-75,-66,-72,-73,100,-53,-68,-65,-70,-52,-66,100,-54,-49,-65,-60,-57,-67,-71,-63,-36,-55,-56,-59,-42,100,-64,-65,-66,-48,-43,-58,-55,-56,-54,-64,-65,]),'DIVISION':([40,46,48,49,50,54,55,58,62,68,69,70,72,73,81,84,105,106,107,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,150,157,],[-64,-65,-74,-75,-66,-72,-73,101,-53,-68,-65,-70,-52,-66,101,-54,-49,-65,-60,-57,-67,-71,-63,-36,-55,-56,-59,-42,101,-64,-65,-66,-48,-43,-58,-55,-56,-54,-64,-65,]),'CONJUNCION':([42,46,48,49,52,54,55,59,62,65,68,69,70,72,82,84,105,106,107,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,152,157,],[-68,-69,-74,-75,-70,-72,-73,103,-53,103,-68,-69,-70,-52,103,-54,103,-69,-60,-57,-67,-71,-63,-36,-55,-56,-59,-42,-37,-64,-65,-66,103,-43,-58,-55,-56,-54,-68,-69,]),'DISYUNCION':([42,46,48,49,52,54,55,59,62,65,68,69,70,72,82,84,105,106,107,117,118,119,120,124,125,126,128,129,130,131,132,133,135,136,137,138,139,141,152,157,],[-68,-69,-74,-75,-70,-72,-73,104,-53,104,-68,-69,-70,-52,104,-54,104,-69,-60,-57,-67,-71,-63,-36,-55,-56,-59,-42,-37,-64,-65,-66,104,-43,-58,-55,-56,-54,-68,-69,]),'ELSE':([163,],[167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,19,142,143,166,168,171,],[2,20,29,159,160,169,172,176,]),'empty':([0,],[3,]),'content':([0,5,19,142,143,166,168,171,],[4,4,4,4,4,4,4,4,]),'no_semicolon':([0,5,19,142,143,166,168,171,],[5,5,5,5,5,5,5,5,]),'define':([0,5,19,142,143,166,168,171,],[6,6,6,6,6,6,6,6,]),'declare':([0,5,19,142,143,166,168,171,],[7,7,7,7,7,7,7,7,]),'assign':([0,5,19,142,143,166,168,171,],[8,8,8,8,8,8,8,8,]),'condition':([0,5,19,142,143,166,168,171,],[9,9,9,9,9,9,9,9,]),'loop':([0,5,19,142,143,166,168,171,],[10,10,10,10,10,10,10,10,]),'function_def':([0,5,19,142,143,166,168,171,],[11,11,11,11,11,11,11,11,]),'variable':([0,5,14,19,37,75,142,143,166,168,171,],[15,15,24,15,24,24,15,15,15,15,15,]),'id':([14,37,75,],[23,77,112,]),'tipo':([22,123,145,161,],[32,155,162,165,]),'valor':([25,78,170,173,174,177,],[38,114,175,178,179,182,]),'num':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[40,72,72,72,72,72,40,72,72,131,72,72,150,72,131,72,40,40,40,40,]),'operacion':([25,53,78,123,170,173,174,177,],[41,79,41,151,41,41,41,41,]),'bool':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[42,68,68,68,68,68,42,128,128,128,68,128,152,128,128,128,42,42,42,42,]),'ajson':([25,30,78,123,170,173,174,177,],[44,76,44,154,44,44,44,44,]),'function_call':([25,26,27,78,170,173,174,177,],[47,67,67,47,47,47,47,47,]),'aritmetica':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[50,73,73,50,73,73,50,125,125,133,73,138,50,125,133,138,50,50,50,50,]),'booleana':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[51,66,66,51,107,107,51,107,107,107,107,107,51,107,107,107,51,51,51,51,]),'comparacion':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[52,70,70,52,70,70,52,126,126,126,70,139,52,126,126,139,52,52,52,52,]),'ex':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[57,71,71,80,71,109,57,124,129,57,71,137,57,80,80,80,57,57,57,57,]),'ex2':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[58,58,58,81,58,81,58,58,58,130,58,58,58,81,81,81,58,58,58,58,]),'ex3':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[59,65,65,82,105,82,59,59,59,59,135,59,59,82,82,82,59,59,59,59,]),'ex1':([25,26,27,53,60,63,78,91,92,99,102,108,123,127,134,140,170,173,174,177,],[61,61,61,83,61,83,61,61,61,61,61,136,61,83,83,83,61,61,61,61,]),'expersion':([26,27,],[64,74,]),'lista':([56,122,],[85,147,]),'elemento':([56,122,],[87,87,]),'clave':([56,122,],[88,88,]),'operador1':([57,71,80,109,124,129,137,],[91,91,91,91,91,91,91,]),'comparador':([57,71,80,109,124,129,137,],[92,92,92,92,92,92,92,]),'operador2':([58,81,130,],[99,99,99,]),'comparador2':([59,65,82,105,135,],[102,102,102,102,102,]),'valor_t':([123,],[148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',8),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',9),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',12),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',16),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',17),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',18),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',19),
  ('content -> define','content',1,'p_content','parser_ajs.py',24),
  ('content -> declare','content',1,'p_content','parser_ajs.py',25),
  ('content -> assign','content',1,'p_content','parser_ajs.py',26),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',31),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',32),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',33),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',38),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',42),
  ('ajson -> LLAVE_ABRE LLAVE_CIERRA','ajson',2,'p_ajson','parser_ajs.py',43),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',46),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',47),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',48),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',51),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave','parser_ajs.py',54),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave','parser_ajs.py',55),
  ('valor_t -> CADENA_COMILLAS','valor_t',1,'p_valor_t','parser_ajs.py',58),
  ('valor_t -> num','valor_t',1,'p_valor_t','parser_ajs.py',59),
  ('valor_t -> operacion','valor_t',1,'p_valor_t','parser_ajs.py',60),
  ('valor_t -> bool','valor_t',1,'p_valor_t','parser_ajs.py',61),
  ('valor_t -> NULL','valor_t',1,'p_valor_t','parser_ajs.py',62),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',63),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',64),
  ('valor_t -> CARACTER','valor_t',1,'p_valor_t','parser_ajs.py',65),
  ('valor_t -> CADENA_NO_COMILLAS','valor_t',1,'p_valor_t','parser_ajs.py',66),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',70),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',71),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',72),
  ('operacion -> PARENTESIS_ABRE operacion PARENTESIS_CIERRA','operacion',3,'p_operacion','parser_ajs.py',73),
  ('aritmetica -> ex operador1 ex','aritmetica',3,'p_aritmetica','parser_ajs.py',77),
  ('aritmetica -> ex2 operador2 ex2','aritmetica',3,'p_aritmetica','parser_ajs.py',78),
  ('operador1 -> SUMA','operador1',1,'p_operador1','parser_ajs.py',81),
  ('operador1 -> RESTA','operador1',1,'p_operador1','parser_ajs.py',82),
  ('operador2 -> MULTIPLICACION','operador2',1,'p_operador2','parser_ajs.py',85),
  ('operador2 -> DIVISION','operador2',1,'p_operador2','parser_ajs.py',86),
  ('comparacion -> ex comparador ex','comparacion',3,'p_comparacion','parser_ajs.py',89),
  ('comparacion -> ex1 IGUAL ex1','comparacion',3,'p_comparacion','parser_ajs.py',90),
  ('comparador -> MAYOR','comparador',1,'p_comparador1','parser_ajs.py',93),
  ('comparador -> MENOR','comparador',1,'p_comparador1','parser_ajs.py',94),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',95),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',96),
  ('booleana -> ex3 comparador2 ex3','booleana',3,'p_booleana','parser_ajs.py',99),
  ('booleana -> NEGACION ex3','booleana',2,'p_booleana','parser_ajs.py',100),
  ('comparador2 -> CONJUNCION','comparador2',1,'p_comparador2','parser_ajs.py',103),
  ('comparador2 -> DISYUNCION','comparador2',1,'p_comparador2','parser_ajs.py',104),
  ('ex -> num','ex',1,'p_ex','parser_ajs.py',107),
  ('ex -> CHARACTER','ex',1,'p_ex','parser_ajs.py',108),
  ('ex -> CADENA_NO_COMILLAS','ex',1,'p_ex','parser_ajs.py',109),
  ('ex -> aritmetica','ex',1,'p_ex','parser_ajs.py',110),
  ('ex -> comparacion','ex',1,'p_ex','parser_ajs.py',111),
  ('ex -> PARENTESIS_ABRE ex PARENTESIS_CIERRA','ex',3,'p_ex','parser_ajs.py',112),
  ('ex1 -> ex','ex1',1,'p_ex1','parser_ajs.py',115),
  ('ex1 -> bool','ex1',1,'p_ex1','parser_ajs.py',116),
  ('ex1 -> booleana','ex1',1,'p_ex1','parser_ajs.py',117),
  ('ex1 -> aritmetica','ex1',1,'p_ex1','parser_ajs.py',118),
  ('ex1 -> comparacion','ex1',1,'p_ex1','parser_ajs.py',119),
  ('ex1 -> PARENTESIS_ABRE ex1 PARENTESIS_CIERRA','ex1',3,'p_ex1','parser_ajs.py',120),
  ('ex2 -> num','ex2',1,'p_ex2','parser_ajs.py',123),
  ('ex2 -> CADENA_NO_COMILLAS','ex2',1,'p_ex2','parser_ajs.py',124),
  ('ex2 -> aritmetica','ex2',1,'p_ex2','parser_ajs.py',125),
  ('ex2 -> PARENTESIS_ABRE ex2 PARENTESIS_CIERRA','ex2',3,'p_ex2','parser_ajs.py',126),
  ('ex3 -> bool','ex3',1,'p_ex3','parser_ajs.py',129),
  ('ex3 -> CADENA_NO_COMILLAS','ex3',1,'p_ex3','parser_ajs.py',130),
  ('ex3 -> comparacion','ex3',1,'p_ex3','parser_ajs.py',131),
  ('ex3 -> PARENTESIS_ABRE ex3 PARENTESIS_CIERRA','ex3',3,'p_ex3','parser_ajs.py',132),
  ('bool -> TR','bool',1,'p_bool','parser_ajs.py',135),
  ('bool -> FL','bool',1,'p_bool','parser_ajs.py',136),
  ('num -> ENTERO','num',1,'p_num','parser_ajs.py',139),
  ('num -> DECIMAL','num',1,'p_num','parser_ajs.py',140),
  ('tipo -> INT','tipo',1,'p_tipo','parser_ajs.py',143),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser_ajs.py',144),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','parser_ajs.py',145),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser_ajs.py',146),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo','parser_ajs.py',147),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',152),
  ('id -> variable','id',1,'p_id','parser_ajs.py',156),
  ('id -> variable COMA id','id',3,'p_id','parser_ajs.py',157),
  ('variable -> CADENA_NO_COMILLAS DOS_PUNTOS tipo','variable',3,'p_variable','parser_ajs.py',160),
  ('variable -> CADENA_NO_COMILLAS','variable',1,'p_variable','parser_ajs.py',161),
  ('assign -> variable ASIGNACION valor','assign',3,'p_assign','parser_ajs.py',165),
  ('valor -> CADENA_COMILLAS','valor',1,'p_valor','parser_ajs.py',169),
  ('valor -> num','valor',1,'p_valor','parser_ajs.py',170),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',171),
  ('valor -> bool','valor',1,'p_valor','parser_ajs.py',172),
  ('valor -> NULL','valor',1,'p_valor','parser_ajs.py',173),
  ('valor -> ajson','valor',1,'p_valor','parser_ajs.py',174),
  ('valor -> CARACTER','valor',1,'p_valor','parser_ajs.py',175),
  ('valor -> CADENA_NO_COMILLAS','valor',1,'p_valor','parser_ajs.py',176),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',177),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',182),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',183),
  ('expersion -> ex3','expersion',1,'p_expersion','parser_ajs.py',188),
  ('expersion -> booleana','expersion',1,'p_expersion','parser_ajs.py',189),
  ('expersion -> function_call','expersion',1,'p_expersion','parser_ajs.py',190),
  ('loop -> WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',195),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',200),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',201),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',202),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',11,'p_function_def','parser_ajs.py',203),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE valor PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',208),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA','function_call',3,'p_function_call','parser_ajs.py',209),
]
