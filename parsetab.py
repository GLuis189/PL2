
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    bool : TR\n            | FLnum : ENTERO\n           | DECIMALident : CADENA_NO_COMILLAS\n             | CADENA_NO_COMILLAS PUNTO ident\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident\n             \n    declare : LET id\n    id : variable\n          | variable COMA id\n          | variable ASIGNACION valor\n          | variable ASIGNACION valor COMA idvariable : CADENA_NO_COMILLAS DOS_PUNTOS tipo\n                | CADENA_NO_COMILLAS\n    assign : variable ASIGNACION valor\n    valor : ident\n             | num\n             | operacion\n             | bool\n             | NULL\n             | ajson_v\n             | CARACTER\n             | function_call\n             | PARENTESIS_ABRE valor PARENTESIS_CIERRA\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tvalor_t : tipo\n               | ajsonclave : CADENA_NO_COMILLAS\n             | CADENA_COMILLASajson_v : LLAVE_ABRE lista_v LLAVE_CIERRAlista_v : elemento_v\n               | elemento_v COMA \n               | elemento_v COMA lista_velemento_v : clave_v DOS_PUNTOS valorclave_v : CADENA_NO_COMILLAS\n             | CADENA_COMILLASoperacion : aritmetica\n                 | booleana\n                 | comparacion\n                 | PARENTESIS_ABRE operacion PARENTESIS_CIERRAaritmetica : valor operador1 valor\n                  | valor operador2 valoroperador1 : SUMA\n                 | RESTAoperador2 : MULTIPLICACION\n                 | DIVISIONcomparacion : valor comparador valor\n                   | valor IGUAL valorcomparador : MAYOR \n                  | MENOR \n                  | MAYOR_IGUAL\n                  | MENOR_IGUAL\n    booleana : valor comparador2 valor\n                | NEGACION valorcomparador2 : CONJUNCION\n                   | DISYUNCION\n    tipo : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n            | CADENA_NO_COMILLAS\n    \n    condition : IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    expersion : valor\n              | booleana\n              | function_call\n    \n    loop : WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA\n                  | CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA\n    arg : valor\n           | valor COMA arg'
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,19,20,29,145,146,164,168,170,171,172,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-81,-86,-82,-90,-88,-89,-87,]),'TYPE':([0,5,9,10,11,19,122,123,145,146,148,151,154,164,168,170,171,172,],[12,12,-11,-12,-13,12,12,12,-81,-86,12,12,12,-82,-90,-88,-89,-87,]),'LET':([0,5,9,10,11,19,122,123,145,146,148,151,154,164,168,170,171,172,],[14,14,-11,-12,-13,14,14,14,-81,-86,14,14,14,-82,-90,-88,-89,-87,]),'IF':([0,5,9,10,11,19,122,123,145,146,148,151,154,164,168,170,171,172,],[16,16,-11,-12,-13,16,16,16,-81,-86,16,16,16,-82,-90,-88,-89,-87,]),'WHILE':([0,5,9,10,11,19,122,123,145,146,148,151,154,164,168,170,171,172,],[17,17,-11,-12,-13,17,17,17,-81,-86,17,17,17,-82,-90,-88,-89,-87,]),'FUNCTION':([0,5,9,10,11,19,122,123,145,146,148,151,154,164,168,170,171,172,],[18,18,-11,-12,-13,18,18,18,-81,-86,18,18,18,-82,-90,-88,-89,-87,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,19,22,25,26,27,37,38,48,57,58,65,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,105,120,121,122,123,125,127,128,132,137,143,145,146,148,151,153,154,156,157,160,164,168,170,171,172,],[13,13,-11,-12,-13,21,13,28,13,31,49,63,63,13,49,49,93,49,13,103,49,49,49,49,49,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,113,49,13,93,49,13,13,31,103,31,49,31,113,-81,-86,13,13,49,13,49,49,49,-82,-90,-88,-89,-87,]),'PUNTO_Y_COMA':([4,6,7,8,13,23,24,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,66,68,69,95,106,107,108,109,110,111,112,113,114,117,119,126,129,130,131,149,158,161,162,165,],[19,-8,-9,-10,-28,-22,-23,-80,-27,-76,-77,-78,-79,-29,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,-39,-24,-25,-73,-60,-61,-72,-66,-67,-38,-59,-18,-19,-92,-49,-40,-26,-20,-91,-21,163,166,167,169,]),'LLAVE_CIERRA':([5,9,10,11,19,20,29,31,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,90,91,95,100,101,106,107,108,109,110,111,112,113,114,117,119,120,126,127,130,131,133,134,135,136,139,140,141,142,145,146,149,159,163,164,166,167,168,169,170,171,172,],[-6,-11,-12,-13,-4,-7,-5,-80,-76,-77,-78,-79,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,119,-50,-73,126,-41,-60,-61,-72,-66,-67,-38,-59,-18,-19,-92,-49,-51,-40,-42,-20,-91,-52,-53,145,146,-43,-44,-45,-46,-81,-86,-21,164,168,-82,170,171,-90,172,-88,-89,-87,]),'RETURN':([5,9,10,11,19,20,29,145,146,148,151,152,155,164,168,170,171,172,],[-6,-11,-12,-13,-4,-7,-5,-81,-86,153,156,157,160,-82,-90,-88,-89,-87,]),'DOS_PUNTOS':([13,92,93,94,99,102,103,104,124,],[22,121,-54,-55,125,128,-47,-48,137,]),'ASIGNACION':([13,15,21,24,31,32,33,34,35,36,],[-28,25,30,38,-80,-27,-76,-77,-78,-79,]),'COMA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,69,91,95,101,106,107,108,109,110,111,112,113,114,117,118,119,126,130,131,134,140,141,142,149,],[-28,37,-80,-27,-76,-77,-78,-79,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,105,120,-73,127,-60,-61,-72,-66,-67,-38,-59,-18,-19,-92,132,-49,-40,-20,-91,-53,-44,-45,-46,-21,]),'PARENTESIS_CIERRA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,68,69,85,86,89,95,98,106,107,108,109,110,111,112,113,114,116,117,118,119,129,130,131,144,149,],[-28,-23,-80,-27,-76,-77,-78,-79,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,96,-83,-57,-37,-18,97,99,-24,-25,111,112,117,-73,124,-60,-61,-72,-66,-67,-38,-59,-18,-19,131,-92,-93,-49,-26,-20,-91,-94,-21,]),'PARENTESIS_ABRE':([16,17,25,26,27,28,38,48,49,58,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[26,27,48,48,48,65,48,48,89,48,89,48,48,48,48,48,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,48,48,48,48,48,48,48,]),'INT':([22,125,128,137,],[33,33,33,33,]),'FLOAT':([22,125,128,137,],[34,34,34,34,]),'CHARACTER':([22,125,128,137,],[35,35,35,35,]),'BOOLEAN':([22,125,128,137,],[36,36,36,36,]),'NULL':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[44,44,44,44,44,44,44,44,44,44,44,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,44,44,44,44,44,44,44,]),'CARACTER':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[46,46,46,46,46,46,46,46,46,46,46,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,46,46,46,46,46,46,46,]),'ENTERO':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[50,50,50,50,50,50,50,50,50,50,50,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,50,50,50,50,50,50,50,]),'DECIMAL':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[51,51,51,51,51,51,51,51,51,51,51,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,51,51,51,51,51,51,51,]),'TR':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[55,55,55,55,55,55,55,55,55,55,55,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,55,55,55,55,55,55,55,]),'FL':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[56,56,56,56,56,56,56,56,56,56,56,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,56,56,56,56,56,56,56,]),'LLAVE_ABRE':([25,26,27,30,31,33,34,35,36,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,96,97,121,128,132,138,147,150,153,156,157,160,],[57,57,57,67,-80,-76,-77,-78,-79,57,57,57,57,57,57,57,57,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,57,122,123,57,67,57,148,151,154,57,57,57,57,]),'NEGACION':([25,26,27,38,48,58,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,121,132,153,156,157,160,],[58,58,58,58,58,58,58,58,58,58,58,-62,-63,-64,-65,-74,-75,-68,-69,-70,-71,58,58,58,58,58,58,58,]),'IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[74,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,74,-57,-37,-18,74,74,-32,74,74,74,74,74,74,-38,-59,-18,-19,-92,74,-49,-20,-91,74,-21,74,74,74,74,]),'SUMA':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[75,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,75,-57,-37,-18,75,75,-32,75,75,75,75,75,75,-38,-59,-18,-19,-92,75,-49,-20,-91,75,-21,75,75,75,75,]),'RESTA':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[76,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,76,-57,-37,-18,76,76,-32,76,76,76,76,76,76,-38,-59,-18,-19,-92,76,-49,-20,-91,76,-21,76,76,76,76,]),'MULTIPLICACION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[77,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,77,-57,-37,-18,77,77,-32,77,77,77,77,77,77,-38,-59,-18,-19,-92,77,-49,-20,-91,77,-21,77,77,77,77,]),'DIVISION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[78,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,78,-57,-37,-18,78,78,-32,78,78,78,78,78,78,-38,-59,-18,-19,-92,78,-49,-20,-91,78,-21,78,78,78,78,]),'CONJUNCION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[79,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,79,-57,-37,-18,79,79,-32,79,79,79,79,79,79,-38,-59,-18,-19,-92,79,-49,-20,-91,79,-21,79,79,79,79,]),'DISYUNCION':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[80,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,80,-57,-37,-18,80,80,-32,80,80,80,80,80,80,-38,-59,-18,-19,-92,80,-49,-20,-91,80,-21,80,80,80,80,]),'MAYOR':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[81,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,81,-57,-37,-18,81,81,-32,81,81,81,81,81,81,-38,-59,-18,-19,-92,81,-49,-20,-91,81,-21,81,81,81,81,]),'MENOR':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[82,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,82,-57,-37,-18,82,82,-32,82,82,82,82,82,82,-38,-59,-18,-19,-92,82,-49,-20,-91,82,-21,82,82,82,82,]),'MAYOR_IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[83,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,83,-57,-37,-18,83,83,-32,83,83,83,83,83,83,-38,-59,-18,-19,-92,83,-49,-20,-91,83,-21,83,83,83,83,]),'MENOR_IGUAL':([39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,60,61,62,63,69,85,86,95,106,107,108,109,110,111,112,113,114,117,118,119,130,131,134,149,158,161,162,165,],[84,-30,-31,-32,-33,-34,-35,-36,-37,-18,-16,-17,-56,-57,-58,-14,-15,84,-57,-37,-18,84,84,-32,84,84,84,84,84,84,-38,-59,-18,-19,-92,84,-49,-20,-91,84,-21,84,84,84,84,]),'PUNTO':([49,63,113,130,],[87,87,87,143,]),'CORCHETE_ABRE':([49,63,113,],[88,88,88,]),'CADENA_COMILLAS':([57,67,88,120,127,],[94,104,115,94,104,]),'CORCHETE_CIERRA':([115,],[130,]),'ELSE':([145,],[150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,19,122,123,148,151,154,],[2,20,29,135,136,152,155,159,]),'empty':([0,],[3,]),'content':([0,5,19,122,123,148,151,154,],[4,4,4,4,4,4,4,4,]),'no_semicolon':([0,5,19,122,123,148,151,154,],[5,5,5,5,5,5,5,5,]),'define':([0,5,19,122,123,148,151,154,],[6,6,6,6,6,6,6,6,]),'declare':([0,5,19,122,123,148,151,154,],[7,7,7,7,7,7,7,7,]),'assign':([0,5,19,122,123,148,151,154,],[8,8,8,8,8,8,8,8,]),'condition':([0,5,19,122,123,148,151,154,],[9,9,9,9,9,9,9,9,]),'loop':([0,5,19,122,123,148,151,154,],[10,10,10,10,10,10,10,10,]),'function_def':([0,5,19,122,123,148,151,154,],[11,11,11,11,11,11,11,11,]),'variable':([0,5,14,19,37,65,105,122,123,148,151,154,],[15,15,24,15,24,24,24,15,15,15,15,15,]),'id':([14,37,65,105,],[23,68,98,129,]),'tipo':([22,125,128,137,],[32,138,141,147,]),'valor':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[39,60,60,69,85,95,106,107,108,109,110,118,134,118,158,161,162,165,]),'ident':([25,26,27,38,48,58,70,71,72,73,74,87,89,121,132,143,153,156,157,160,],[40,40,40,40,40,40,40,40,40,40,40,114,40,40,40,149,40,40,40,40,]),'num':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'operacion':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[42,42,42,42,86,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'bool':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ajson_v':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'function_call':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[47,62,62,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'aritmetica':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'booleana':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[53,61,61,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'comparacion':([25,26,27,38,48,58,70,71,72,73,74,89,121,132,153,156,157,160,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expersion':([26,27,],[59,64,]),'ajson':([30,128,],[66,142,]),'operador1':([39,60,69,85,95,106,107,108,109,110,118,134,158,161,162,165,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'operador2':([39,60,69,85,95,106,107,108,109,110,118,134,158,161,162,165,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'comparador2':([39,60,69,85,95,106,107,108,109,110,118,134,158,161,162,165,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'comparador':([39,60,69,85,95,106,107,108,109,110,118,134,158,161,162,165,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'lista_v':([57,120,],[90,133,]),'elemento_v':([57,120,],[91,91,]),'clave_v':([57,120,],[92,92,]),'lista':([67,127,],[100,139,]),'elemento':([67,127,],[101,101,]),'clave':([67,127,],[102,102,]),'arg':([89,132,],[116,144,]),'valor_t':([128,],[140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',8),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',9),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',13),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',18),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',19),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',20),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',21),
  ('content -> define','content',1,'p_content','parser_ajs.py',27),
  ('content -> declare','content',1,'p_content','parser_ajs.py',28),
  ('content -> assign','content',1,'p_content','parser_ajs.py',29),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',35),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',36),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',37),
  ('bool -> TR','bool',1,'p_bool','parser_ajs.py',44),
  ('bool -> FL','bool',1,'p_bool','parser_ajs.py',45),
  ('num -> ENTERO','num',1,'p_num','parser_ajs.py',49),
  ('num -> DECIMAL','num',1,'p_num','parser_ajs.py',50),
  ('ident -> CADENA_NO_COMILLAS','ident',1,'p_ident','parser_ajs.py',54),
  ('ident -> CADENA_NO_COMILLAS PUNTO ident','ident',3,'p_ident','parser_ajs.py',55),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA','ident',4,'p_ident','parser_ajs.py',56),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident','ident',6,'p_ident','parser_ajs.py',57),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',63),
  ('id -> variable','id',1,'p_id','parser_ajs.py',68),
  ('id -> variable COMA id','id',3,'p_id','parser_ajs.py',69),
  ('id -> variable ASIGNACION valor','id',3,'p_id','parser_ajs.py',70),
  ('id -> variable ASIGNACION valor COMA id','id',5,'p_id','parser_ajs.py',71),
  ('variable -> CADENA_NO_COMILLAS DOS_PUNTOS tipo','variable',3,'p_variable','parser_ajs.py',75),
  ('variable -> CADENA_NO_COMILLAS','variable',1,'p_variable','parser_ajs.py',76),
  ('assign -> variable ASIGNACION valor','assign',3,'p_assign','parser_ajs.py',81),
  ('valor -> ident','valor',1,'p_valor','parser_ajs.py',86),
  ('valor -> num','valor',1,'p_valor','parser_ajs.py',87),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',88),
  ('valor -> bool','valor',1,'p_valor','parser_ajs.py',89),
  ('valor -> NULL','valor',1,'p_valor','parser_ajs.py',90),
  ('valor -> ajson_v','valor',1,'p_valor','parser_ajs.py',91),
  ('valor -> CARACTER','valor',1,'p_valor','parser_ajs.py',92),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',93),
  ('valor -> PARENTESIS_ABRE valor PARENTESIS_CIERRA','valor',3,'p_valor','parser_ajs.py',94),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',100),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',105),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',109),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',110),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',111),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',115),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',119),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',120),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave','parser_ajs.py',124),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave','parser_ajs.py',125),
  ('ajson_v -> LLAVE_ABRE lista_v LLAVE_CIERRA','ajson_v',3,'p_ajson_v','parser_ajs.py',129),
  ('lista_v -> elemento_v','lista_v',1,'p_lista_v','parser_ajs.py',133),
  ('lista_v -> elemento_v COMA','lista_v',2,'p_lista_v','parser_ajs.py',134),
  ('lista_v -> elemento_v COMA lista_v','lista_v',3,'p_lista_v','parser_ajs.py',135),
  ('elemento_v -> clave_v DOS_PUNTOS valor','elemento_v',3,'p_elemento_v','parser_ajs.py',139),
  ('clave_v -> CADENA_NO_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',143),
  ('clave_v -> CADENA_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',144),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',148),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',149),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',150),
  ('operacion -> PARENTESIS_ABRE operacion PARENTESIS_CIERRA','operacion',3,'p_operacion','parser_ajs.py',151),
  ('aritmetica -> valor operador1 valor','aritmetica',3,'p_aritmetica','parser_ajs.py',156),
  ('aritmetica -> valor operador2 valor','aritmetica',3,'p_aritmetica','parser_ajs.py',157),
  ('operador1 -> SUMA','operador1',1,'p_operador1','parser_ajs.py',161),
  ('operador1 -> RESTA','operador1',1,'p_operador1','parser_ajs.py',162),
  ('operador2 -> MULTIPLICACION','operador2',1,'p_operador2','parser_ajs.py',166),
  ('operador2 -> DIVISION','operador2',1,'p_operador2','parser_ajs.py',167),
  ('comparacion -> valor comparador valor','comparacion',3,'p_comparacion','parser_ajs.py',171),
  ('comparacion -> valor IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',172),
  ('comparador -> MAYOR','comparador',1,'p_comparador1','parser_ajs.py',176),
  ('comparador -> MENOR','comparador',1,'p_comparador1','parser_ajs.py',177),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',178),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',179),
  ('booleana -> valor comparador2 valor','booleana',3,'p_booleana','parser_ajs.py',184),
  ('booleana -> NEGACION valor','booleana',2,'p_booleana','parser_ajs.py',185),
  ('comparador2 -> CONJUNCION','comparador2',1,'p_comparador2','parser_ajs.py',189),
  ('comparador2 -> DISYUNCION','comparador2',1,'p_comparador2','parser_ajs.py',190),
  ('tipo -> INT','tipo',1,'p_tipo','parser_ajs.py',196),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser_ajs.py',197),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','parser_ajs.py',198),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser_ajs.py',199),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo','parser_ajs.py',200),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',206),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',207),
  ('expersion -> valor','expersion',1,'p_expersion','parser_ajs.py',213),
  ('expersion -> booleana','expersion',1,'p_expersion','parser_ajs.py',214),
  ('expersion -> function_call','expersion',1,'p_expersion','parser_ajs.py',215),
  ('loop -> WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',221),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',227),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',228),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',229),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',11,'p_function_def','parser_ajs.py',230),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',236),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA','function_call',3,'p_function_call','parser_ajs.py',237),
  ('arg -> valor','arg',1,'p_arg','parser_ajs.py',242),
  ('arg -> valor COMA arg','arg',3,'p_arg','parser_ajs.py',243),
]
