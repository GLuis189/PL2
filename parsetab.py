
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA COMENTARIO_BLOQUE COMENTARIO_LINEA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    bool : TR\n            | FLnum : ENTERO\n           | DECIMAL\n    declare : LET id\n    id : variable\n          | variable COMA id\n          | variable ASIGNACION valor\n          | variable ASIGNACION valor COMA idvariable : CADENA_NO_COMILLAS DOS_PUNTOS tipo\n                | CADENA_NO_COMILLAS\n    assign : variable ASIGNACION valor\n    valor : CADENA_COMILLAS\n             | num\n             | operacion\n             | bool\n             | NULL\n             | ajson_v\n             | CARACTER\n             | CADENA_NO_COMILLAS\n             | function_call\n             | PARENTESIS_ABRE valor PARENTESIS_CIERRA\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tvalor_t : tipo\n               | ajsonclave : CADENA_NO_COMILLAS\n             | CADENA_COMILLASajson_v : LLAVE_ABRE lista_v LLAVE_CIERRAlista_v : elemento_v\n               | elemento_v COMA \n               | elemento_v COMA lista_velemento_v : clave_v DOS_PUNTOS valorclave_v : CADENA_NO_COMILLAS\n             | CADENA_COMILLASoperacion : aritmetica\n                 | booleana\n                 | comparacion\n                 | PARENTESIS_ABRE operacion PARENTESIS_CIERRAaritmetica : valor operador1 valor\n                  | valor operador2 valoroperador1 : SUMA\n                 | RESTAoperador2 : MULTIPLICACION\n                 | DIVISIONcomparacion : valor comparador valor\n                   | valor IGUAL valorcomparador : MAYOR \n                  | MENOR \n                  | MAYOR_IGUAL\n                  | MENOR_IGUAL\n    booleana : valor comparador2 valor\n                | NEGACION valorcomparador2 : CONJUNCION\n                   | DISYUNCION\n    tipo : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n            | CADENA_NO_COMILLAS\n    \n    condition : IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    expersion : valor\n              | booleana\n              | function_call\n    \n    loop : WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE valor PARENTESIS_CIERRA\n                  | CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA\n    '
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,19,20,29,134,135,152,156,158,159,160,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-78,-83,-79,-87,-85,-86,-84,]),'TYPE':([0,5,9,10,11,19,115,116,134,135,137,139,142,152,156,158,159,160,],[12,12,-11,-12,-13,12,12,12,-78,-83,12,12,12,-79,-87,-85,-86,-84,]),'LET':([0,5,9,10,11,19,115,116,134,135,137,139,142,152,156,158,159,160,],[14,14,-11,-12,-13,14,14,14,-78,-83,14,14,14,-79,-87,-85,-86,-84,]),'IF':([0,5,9,10,11,19,115,116,134,135,137,139,142,152,156,158,159,160,],[16,16,-11,-12,-13,16,16,16,-78,-83,16,16,16,-79,-87,-85,-86,-84,]),'WHILE':([0,5,9,10,11,19,115,116,134,135,137,139,142,152,156,158,159,160,],[17,17,-11,-12,-13,17,17,17,-78,-83,17,17,17,-79,-87,-85,-86,-84,]),'FUNCTION':([0,5,9,10,11,19,115,116,134,135,137,139,142,152,156,158,159,160,],[18,18,-11,-12,-13,18,18,18,-78,-83,18,18,18,-79,-87,-85,-86,-84,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,19,22,25,26,27,37,38,49,57,58,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,102,113,114,115,116,118,120,121,128,134,135,137,139,141,142,144,145,148,152,156,158,159,160,],[13,13,-11,-12,-13,21,13,28,13,31,47,47,47,13,47,47,90,47,13,100,47,47,47,47,47,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,47,13,90,47,13,13,31,100,31,31,-78,-83,13,13,47,13,47,47,47,-79,-87,-85,-86,-84,]),'PUNTO_Y_COMA':([4,6,7,8,13,23,24,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,65,67,68,92,103,104,105,106,107,109,110,111,112,119,122,123,146,149,150,153,],[19,-8,-9,-10,-24,-18,-19,-77,-23,-73,-74,-75,-76,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,-36,-20,-21,-70,-57,-58,-69,-63,-64,-89,-35,-56,-46,-37,-22,-88,151,154,155,157,]),'LLAVE_CIERRA':([5,9,10,11,19,20,29,31,33,34,35,36,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,87,88,92,97,98,103,104,105,106,107,109,110,111,112,113,119,120,123,124,125,126,127,130,131,132,133,134,135,147,151,152,154,155,156,157,158,159,160,],[-6,-11,-12,-13,-4,-7,-5,-77,-73,-74,-75,-76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,112,-47,-70,119,-38,-57,-58,-69,-63,-64,-89,-35,-56,-46,-48,-37,-39,-88,-49,-50,134,135,-40,-41,-42,-43,-78,-83,152,156,-79,158,159,-87,160,-85,-86,-84,]),'RETURN':([5,9,10,11,19,20,29,134,135,137,139,140,143,152,156,158,159,160,],[-6,-11,-12,-13,-4,-7,-5,-78,-83,141,144,145,148,-79,-87,-85,-86,-84,]),'DOS_PUNTOS':([13,89,90,91,96,99,100,101,117,],[22,114,-51,-52,118,121,-44,-45,128,]),'ASIGNACION':([13,15,21,24,31,32,33,34,35,36,],[-24,25,30,38,-77,-23,-73,-74,-75,-76,]),'COMA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,68,88,92,98,103,104,105,106,107,109,110,111,112,119,123,125,131,132,133,],[-24,37,-77,-23,-73,-74,-75,-76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,102,113,-70,120,-57,-58,-69,-63,-64,-89,-35,-56,-46,-37,-88,-50,-41,-42,-43,]),'PARENTESIS_CIERRA':([13,24,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,59,60,61,62,63,64,67,68,84,85,86,92,95,103,104,105,106,107,108,109,110,111,112,122,123,],[-24,-19,-77,-23,-73,-74,-75,-76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,93,-80,-54,-34,94,96,-20,-21,109,110,111,-70,117,-57,-58,-69,-63,-64,123,-89,-35,-56,-46,-22,-88,]),'PARENTESIS_ABRE':([16,17,25,26,27,28,38,47,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[26,27,49,49,49,64,49,84,49,49,49,49,49,49,49,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,49,49,49,49,49,49,]),'INT':([22,118,121,128,],[33,33,33,33,]),'FLOAT':([22,118,121,128,],[34,34,34,34,]),'CHARACTER':([22,118,121,128,],[35,35,35,35,]),'BOOLEAN':([22,118,121,128,],[36,36,36,36,]),'CADENA_COMILLAS':([25,26,27,38,49,57,58,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,113,114,120,141,144,145,148,],[40,40,40,40,40,91,40,101,40,40,40,40,40,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,40,91,40,101,40,40,40,40,]),'NULL':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[44,44,44,44,44,44,44,44,44,44,44,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,44,44,44,44,44,44,]),'CARACTER':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[46,46,46,46,46,46,46,46,46,46,46,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,46,46,46,46,46,46,]),'ENTERO':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[50,50,50,50,50,50,50,50,50,50,50,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,50,50,50,50,50,50,]),'DECIMAL':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[51,51,51,51,51,51,51,51,51,51,51,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,51,51,51,51,51,51,]),'TR':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[55,55,55,55,55,55,55,55,55,55,55,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,55,55,55,55,55,55,]),'FL':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[56,56,56,56,56,56,56,56,56,56,56,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,56,56,56,56,56,56,]),'LLAVE_ABRE':([25,26,27,30,31,33,34,35,36,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,93,94,114,121,129,136,138,141,144,145,148,],[57,57,57,66,-77,-73,-74,-75,-76,57,57,57,57,57,57,57,57,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,57,115,116,57,66,137,139,142,57,57,57,57,]),'NEGACION':([25,26,27,38,49,58,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,114,141,144,145,148,],[58,58,58,58,58,58,58,58,58,58,58,-59,-60,-61,-62,-71,-72,-65,-66,-67,-68,58,58,58,58,58,58,]),'IGUAL':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[73,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,73,-54,-34,73,73,-28,73,73,73,73,73,73,73,-89,-35,-56,-46,-88,73,73,73,73,73,]),'SUMA':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[74,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,74,-54,-34,74,74,-28,74,74,74,74,74,74,74,-89,-35,-56,-46,-88,74,74,74,74,74,]),'RESTA':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,75,-54,-34,75,75,-28,75,75,75,75,75,75,75,-89,-35,-56,-46,-88,75,75,75,75,75,]),'MULTIPLICACION':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,76,-54,-34,76,76,-28,76,76,76,76,76,76,76,-89,-35,-56,-46,-88,76,76,76,76,76,]),'DIVISION':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[77,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,77,-54,-34,77,77,-28,77,77,77,77,77,77,77,-89,-35,-56,-46,-88,77,77,77,77,77,]),'CONJUNCION':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[78,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,78,-54,-34,78,78,-28,78,78,78,78,78,78,78,-89,-35,-56,-46,-88,78,78,78,78,78,]),'DISYUNCION':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[79,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,79,-54,-34,79,79,-28,79,79,79,79,79,79,79,-89,-35,-56,-46,-88,79,79,79,79,79,]),'MAYOR':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[80,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,80,-54,-34,80,80,-28,80,80,80,80,80,80,80,-89,-35,-56,-46,-88,80,80,80,80,80,]),'MENOR':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[81,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,81,-54,-34,81,81,-28,81,81,81,81,81,81,81,-89,-35,-56,-46,-88,81,81,81,81,81,]),'MAYOR_IGUAL':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[82,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,82,-54,-34,82,82,-28,82,82,82,82,82,82,82,-89,-35,-56,-46,-88,82,82,82,82,82,]),'MENOR_IGUAL':([39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,60,61,62,68,85,86,92,103,104,105,106,107,108,109,110,111,112,123,125,146,149,150,153,],[83,-26,-27,-28,-29,-30,-31,-32,-33,-34,-16,-17,-53,-54,-55,-14,-15,83,-54,-34,83,83,-28,83,83,83,83,83,83,83,-89,-35,-56,-46,-88,83,83,83,83,83,]),'ELSE':([134,],[138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,19,115,116,137,139,142,],[2,20,29,126,127,140,143,147,]),'empty':([0,],[3,]),'content':([0,5,19,115,116,137,139,142,],[4,4,4,4,4,4,4,4,]),'no_semicolon':([0,5,19,115,116,137,139,142,],[5,5,5,5,5,5,5,5,]),'define':([0,5,19,115,116,137,139,142,],[6,6,6,6,6,6,6,6,]),'declare':([0,5,19,115,116,137,139,142,],[7,7,7,7,7,7,7,7,]),'assign':([0,5,19,115,116,137,139,142,],[8,8,8,8,8,8,8,8,]),'condition':([0,5,19,115,116,137,139,142,],[9,9,9,9,9,9,9,9,]),'loop':([0,5,19,115,116,137,139,142,],[10,10,10,10,10,10,10,10,]),'function_def':([0,5,19,115,116,137,139,142,],[11,11,11,11,11,11,11,11,]),'variable':([0,5,14,19,37,64,102,115,116,137,139,142,],[15,15,24,15,24,24,24,15,15,15,15,15,]),'id':([14,37,64,102,],[23,67,95,122,]),'tipo':([22,118,121,128,],[32,129,132,136,]),'valor':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[39,60,60,68,85,92,103,104,105,106,107,108,125,146,149,150,153,]),'num':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'operacion':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[42,42,42,42,86,42,42,42,42,42,42,42,42,42,42,42,42,]),'bool':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ajson_v':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'function_call':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[48,62,62,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'aritmetica':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'booleana':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[53,61,61,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'comparacion':([25,26,27,38,49,58,69,70,71,72,73,84,114,141,144,145,148,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expersion':([26,27,],[59,63,]),'ajson':([30,121,],[65,133,]),'operador1':([39,60,68,85,92,103,104,105,106,107,108,125,146,149,150,153,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'operador2':([39,60,68,85,92,103,104,105,106,107,108,125,146,149,150,153,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'comparador2':([39,60,68,85,92,103,104,105,106,107,108,125,146,149,150,153,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'comparador':([39,60,68,85,92,103,104,105,106,107,108,125,146,149,150,153,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'lista_v':([57,113,],[87,124,]),'elemento_v':([57,113,],[88,88,]),'clave_v':([57,113,],[89,89,]),'lista':([66,120,],[97,130,]),'elemento':([66,120,],[98,98,]),'clave':([66,120,],[99,99,]),'valor_t':([121,],[131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',8),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',9),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',13),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',18),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',19),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',20),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',21),
  ('content -> define','content',1,'p_content','parser_ajs.py',27),
  ('content -> declare','content',1,'p_content','parser_ajs.py',28),
  ('content -> assign','content',1,'p_content','parser_ajs.py',29),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',35),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',36),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',37),
  ('bool -> TR','bool',1,'p_bool','parser_ajs.py',44),
  ('bool -> FL','bool',1,'p_bool','parser_ajs.py',45),
  ('num -> ENTERO','num',1,'p_num','parser_ajs.py',49),
  ('num -> DECIMAL','num',1,'p_num','parser_ajs.py',50),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',63),
  ('id -> variable','id',1,'p_id','parser_ajs.py',68),
  ('id -> variable COMA id','id',3,'p_id','parser_ajs.py',69),
  ('id -> variable ASIGNACION valor','id',3,'p_id','parser_ajs.py',70),
  ('id -> variable ASIGNACION valor COMA id','id',5,'p_id','parser_ajs.py',71),
  ('variable -> CADENA_NO_COMILLAS DOS_PUNTOS tipo','variable',3,'p_variable','parser_ajs.py',75),
  ('variable -> CADENA_NO_COMILLAS','variable',1,'p_variable','parser_ajs.py',76),
  ('assign -> variable ASIGNACION valor','assign',3,'p_assign','parser_ajs.py',81),
  ('valor -> CADENA_COMILLAS','valor',1,'p_valor','parser_ajs.py',86),
  ('valor -> num','valor',1,'p_valor','parser_ajs.py',87),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',88),
  ('valor -> bool','valor',1,'p_valor','parser_ajs.py',89),
  ('valor -> NULL','valor',1,'p_valor','parser_ajs.py',90),
  ('valor -> ajson_v','valor',1,'p_valor','parser_ajs.py',91),
  ('valor -> CARACTER','valor',1,'p_valor','parser_ajs.py',92),
  ('valor -> CADENA_NO_COMILLAS','valor',1,'p_valor','parser_ajs.py',93),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',94),
  ('valor -> PARENTESIS_ABRE valor PARENTESIS_CIERRA','valor',3,'p_valor','parser_ajs.py',95),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',101),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',106),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',110),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',111),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',112),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',116),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',120),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',121),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave','parser_ajs.py',125),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave','parser_ajs.py',126),
  ('ajson_v -> LLAVE_ABRE lista_v LLAVE_CIERRA','ajson_v',3,'p_ajson_v','parser_ajs.py',130),
  ('lista_v -> elemento_v','lista_v',1,'p_lista_v','parser_ajs.py',134),
  ('lista_v -> elemento_v COMA','lista_v',2,'p_lista_v','parser_ajs.py',135),
  ('lista_v -> elemento_v COMA lista_v','lista_v',3,'p_lista_v','parser_ajs.py',136),
  ('elemento_v -> clave_v DOS_PUNTOS valor','elemento_v',3,'p_elemento_v','parser_ajs.py',140),
  ('clave_v -> CADENA_NO_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',144),
  ('clave_v -> CADENA_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',145),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',149),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',150),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',151),
  ('operacion -> PARENTESIS_ABRE operacion PARENTESIS_CIERRA','operacion',3,'p_operacion','parser_ajs.py',152),
  ('aritmetica -> valor operador1 valor','aritmetica',3,'p_aritmetica','parser_ajs.py',157),
  ('aritmetica -> valor operador2 valor','aritmetica',3,'p_aritmetica','parser_ajs.py',158),
  ('operador1 -> SUMA','operador1',1,'p_operador1','parser_ajs.py',162),
  ('operador1 -> RESTA','operador1',1,'p_operador1','parser_ajs.py',163),
  ('operador2 -> MULTIPLICACION','operador2',1,'p_operador2','parser_ajs.py',167),
  ('operador2 -> DIVISION','operador2',1,'p_operador2','parser_ajs.py',168),
  ('comparacion -> valor comparador valor','comparacion',3,'p_comparacion','parser_ajs.py',172),
  ('comparacion -> valor IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',173),
  ('comparador -> MAYOR','comparador',1,'p_comparador1','parser_ajs.py',177),
  ('comparador -> MENOR','comparador',1,'p_comparador1','parser_ajs.py',178),
  ('comparador -> MAYOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',179),
  ('comparador -> MENOR_IGUAL','comparador',1,'p_comparador1','parser_ajs.py',180),
  ('booleana -> valor comparador2 valor','booleana',3,'p_booleana','parser_ajs.py',185),
  ('booleana -> NEGACION valor','booleana',2,'p_booleana','parser_ajs.py',186),
  ('comparador2 -> CONJUNCION','comparador2',1,'p_comparador2','parser_ajs.py',190),
  ('comparador2 -> DISYUNCION','comparador2',1,'p_comparador2','parser_ajs.py',191),
  ('tipo -> INT','tipo',1,'p_tipo','parser_ajs.py',197),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser_ajs.py',198),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','parser_ajs.py',199),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser_ajs.py',200),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo','parser_ajs.py',201),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',207),
  ('condition -> IF PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',208),
  ('expersion -> valor','expersion',1,'p_expersion','parser_ajs.py',214),
  ('expersion -> booleana','expersion',1,'p_expersion','parser_ajs.py',215),
  ('expersion -> function_call','expersion',1,'p_expersion','parser_ajs.py',216),
  ('loop -> WHILE PARENTESIS_ABRE expersion PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',222),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',228),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',229),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',230),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',11,'p_function_def','parser_ajs.py',231),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE valor PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',237),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA','function_call',3,'p_function_call','parser_ajs.py',238),
]
