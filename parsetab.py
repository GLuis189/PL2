
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftDISYUNCIONleftCONJUNCIONrightNEGACIONnonassocIGUALnonassocMENOR_IGUALMENORMAYOR_IGUALMAYORleftSUMARESTAleftMULTIPLICACIONDIVISIONrightUPLUSUMINUSASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    ident : CADENA_NO_COMILLAS\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA\n             ident : CADENA_NO_COMILLAS PUNTO ident\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident\n    \n\n        declare : LET id \n    \n    asign_valor : ASIGNACION valor\n                | empty\n    id : variable asign_valorid : variable asign_valor COMA idvariable : ident\n                | ident DOS_PUNTOS CADENA_NO_COMILLAS\n    assign : ident asign_valor\n    valor : operacion\n             | ajson_v\n             | function_callvalor : identvalor : ENTEROvalor : DECIMALvalor : TR\n              | FLvalor : NULLvalor : CARACTERvalor : PARENTESIS_ABRE valor PARENTESIS_CIERRAvalor : SUMA valor %prec UPLUS\n             | RESTA valor %prec UMINUS\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tvalor_t : tipo\n               | ajsonclave : CADENA_COMILLASclave : CADENA_NO_COMILLASajson_v : LLAVE_ABRE lista_v LLAVE_CIERRAlista_v : elemento_v\n               | elemento_v COMA \n               | elemento_v COMA lista_velemento_v : clave_v DOS_PUNTOS valorclave_v : CADENA_COMILLASclave_v : CADENA_NO_COMILLASoperacion : aritmetica\n                 | booleana\n                 | comparacionaritmetica : valor SUMA valor %prec SUMA\n                  | valor RESTA valor %prec RESTAaritmetica : valor MULTIPLICACION valor %prec MULTIPLICACION\n                  | valor DIVISION valor %prec DIVISIONcomparacion : valor MAYOR valor %prec MAYOR\n                   | valor MENOR valor %prec MENOR\n                   | valor MAYOR_IGUAL valor %prec MAYOR_IGUAL\n                   | valor MENOR_IGUAL valor %prec MENOR_IGUALcomparacion : valor IGUAL valor %prec IGUALbooleana : valor CONJUNCION valor %prec CONJUNCION\n                | valor DISYUNCION valor %prec DISYUNCIONbooleana : NEGACION valor %prec NEGACIONtipo : INTtipo : FLOATtipo : CHARACTERtipo : BOOLEANtipo : CADENA_NO_COMILLAS\n    condition : IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    loop : WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    id_t : variable_t\n            | variable_t COMA id_t\n            | emptyvariable_t : CADENA_NO_COMILLAS DOS_PUNTOS tipo\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id_t PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id_t PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA\n    arg : valor\n           | valor COMA arg\n           | empty'
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,19,20,33,147,148,158,162,163,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-76,-78,-77,-84,-83,]),'TYPE':([0,5,9,10,11,19,119,120,147,148,151,152,158,162,163,],[12,12,-11,-12,-13,12,12,12,-76,-78,12,12,-77,-84,-83,]),'LET':([0,5,9,10,11,19,119,120,147,148,151,152,158,162,163,],[14,14,-11,-12,-13,14,14,14,-76,-78,14,14,-77,-84,-83,]),'IF':([0,5,9,10,11,19,119,120,147,148,151,152,158,162,163,],[16,16,-11,-12,-13,16,16,16,-76,-78,16,16,-77,-84,-83,]),'WHILE':([0,5,9,10,11,19,119,120,147,148,151,152,158,162,163,],[17,17,-11,-12,-13,17,17,17,-76,-78,17,17,-77,-84,-83,]),'FUNCTION':([0,5,9,10,11,19,119,120,147,148,151,152,158,162,163,],[18,18,-11,-12,-13,18,18,18,-76,-78,18,18,-77,-84,-83,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,19,23,28,30,31,38,50,51,52,56,58,61,63,65,67,68,69,70,71,72,73,74,75,76,77,86,99,114,115,119,120,121,123,125,126,131,140,147,148,151,152,154,156,158,162,163,],[13,13,-11,-12,-13,21,13,32,13,13,57,57,57,66,57,57,57,85,57,90,98,13,57,57,57,57,57,57,57,57,57,57,57,57,13,85,57,13,13,134,90,98,134,57,134,-76,-78,13,13,57,57,-77,-84,-83,]),'PUNTO_Y_COMA':([4,6,7,8,13,15,24,25,26,27,29,36,37,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,62,64,66,79,80,87,100,101,102,103,104,105,106,107,108,109,110,111,112,113,124,127,130,157,159,],[19,-8,-9,-10,-14,-3,-18,-3,-23,-25,-20,-16,-21,-19,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,-39,-15,-24,-37,-38,-70,-22,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-36,-49,-40,-17,-85,160,161,]),'LLAVE_CIERRA':([5,9,10,11,13,19,20,33,36,40,41,42,43,44,45,46,47,48,49,53,54,55,57,64,79,80,81,82,87,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,124,125,127,128,129,130,132,133,134,136,137,138,139,142,143,144,145,147,148,155,158,160,161,162,163,],[-6,-11,-12,-13,-14,-4,-7,-5,-16,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,-15,-37,-38,113,-50,-70,124,-41,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-36,-49,-51,-40,-42,-17,-52,-53,-85,147,148,-75,-71,-72,-73,-74,-43,-44,-45,-46,-76,-78,158,-77,162,163,-84,-83,]),'RETURN':([5,9,10,11,19,20,33,147,148,151,153,158,162,163,],[-6,-11,-12,-13,-4,-7,-5,-76,-78,154,156,-77,-84,-83,]),'ASIGNACION':([13,15,21,25,26,36,64,66,127,],[-14,28,34,28,-23,-16,-15,-24,-17,]),'DOS_PUNTOS':([13,26,36,64,83,84,85,90,96,97,98,122,127,],[-14,38,-16,-15,115,-54,-55,121,126,-47,-48,140,-17,]),'COMA':([13,25,26,29,36,37,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,64,66,79,80,82,87,92,95,101,102,103,104,105,106,107,108,109,110,111,112,113,117,124,127,129,130,134,135,136,137,138,139,143,144,145,],[-14,-3,-23,-20,-16,65,-19,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,-15,-24,-37,-38,114,-70,123,125,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-36,-49,131,-40,-17,-53,-85,-75,-82,-71,-72,-73,-74,-44,-45,-46,]),'SUMA':([13,28,30,31,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,87,101,102,103,104,105,106,107,108,109,110,111,112,113,115,117,127,129,130,131,154,156,157,159,],[-14,51,51,51,-16,67,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,51,51,51,-56,-57,-58,-14,51,67,67,-15,51,51,51,51,51,51,51,51,51,51,51,67,-37,-38,51,67,-59,-60,-61,-62,67,67,67,67,67,67,67,-36,-49,51,67,-17,67,-85,51,51,51,67,67,]),'RESTA':([13,28,30,31,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,87,101,102,103,104,105,106,107,108,109,110,111,112,113,115,117,127,129,130,131,154,156,157,159,],[-14,52,52,52,-16,68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,52,52,52,-56,-57,-58,-14,52,68,68,-15,52,52,52,52,52,52,52,52,52,52,52,68,-37,-38,52,68,-59,-60,-61,-62,68,68,68,68,68,68,68,-36,-49,52,68,-17,68,-85,52,52,52,68,68,]),'MULTIPLICACION':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,69,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,69,69,-15,69,-37,-38,69,69,69,-61,-62,69,69,69,69,69,69,69,-36,-49,69,-17,69,-85,69,69,]),'DIVISION':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,70,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,70,70,-15,70,-37,-38,70,70,70,-61,-62,70,70,70,70,70,70,70,-36,-49,70,-17,70,-85,70,70,]),'CONJUNCION':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,71,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,71,71,-15,71,-37,-38,-70,-59,-60,-61,-62,-68,71,-63,-64,-65,-66,-67,-36,-49,71,-17,71,-85,71,71,]),'DISYUNCION':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,72,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,72,72,-15,72,-37,-38,-70,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-36,-49,72,-17,72,-85,72,72,]),'MAYOR':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,73,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,73,73,-15,73,-37,-38,73,-59,-60,-61,-62,73,73,None,None,None,None,73,-36,-49,73,-17,73,-85,73,73,]),'MENOR':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,74,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,74,74,-15,74,-37,-38,74,-59,-60,-61,-62,74,74,None,None,None,None,74,-36,-49,74,-17,74,-85,74,74,]),'MAYOR_IGUAL':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,75,75,-15,75,-37,-38,75,-59,-60,-61,-62,75,75,None,None,None,None,75,-36,-49,75,-17,75,-85,75,75,]),'MENOR_IGUAL':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,76,76,-15,76,-37,-38,76,-59,-60,-61,-62,76,76,None,None,None,None,76,-36,-49,76,-17,76,-85,76,76,]),'IGUAL':([13,36,39,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,64,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,112,113,117,127,129,130,157,159,],[-14,-16,77,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,77,77,-15,77,-37,-38,77,-59,-60,-61,-62,77,77,-63,-64,-65,-66,None,-36,-49,77,-17,77,-85,77,77,]),'PARENTESIS_CIERRA':([13,36,40,41,42,43,44,45,46,47,48,49,53,54,55,57,59,60,61,64,78,79,80,86,87,91,92,93,101,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,123,127,130,131,134,135,136,137,138,139,141,146,],[-14,-16,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-57,-58,-14,88,89,-3,-15,112,-37,-38,-3,-70,122,-79,-81,-59,-60,-61,-62,-68,-69,-63,-64,-65,-66,-67,-36,-49,130,-86,-88,-3,-17,-85,-3,-75,-82,-71,-72,-73,-74,-80,-87,]),'CORCHETE_ABRE':([13,57,],[22,22,]),'PUNTO':([13,57,64,],[23,23,99,]),'PARENTESIS_ABRE':([16,17,28,30,31,32,50,51,52,57,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[30,31,50,50,50,61,50,50,50,86,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'CADENA_COMILLAS':([22,56,63,114,125,],[35,84,97,84,97,]),'ENTERO':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'DECIMAL':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'TR':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'FL':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NULL':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'CARACTER':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LLAVE_ABRE':([28,30,31,34,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,88,89,115,126,131,134,136,137,138,139,149,150,154,156,],[56,56,56,63,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,119,120,56,63,56,-75,-71,-72,-73,-74,151,152,56,56,]),'NEGACION':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'CORCHETE_CIERRA':([35,],[64,]),'INT':([121,126,140,],[136,136,136,]),'FLOAT':([121,126,140,],[137,137,137,]),'CHARACTER':([121,126,140,],[138,138,138,]),'BOOLEAN':([121,126,140,],[139,139,139,]),'ELSE':([147,],[150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,19,119,120,151,152,],[2,20,33,132,133,153,155,]),'empty':([0,15,25,61,86,123,131,],[3,29,29,93,118,93,118,]),'content':([0,5,19,119,120,151,152,],[4,4,4,4,4,4,4,]),'no_semicolon':([0,5,19,119,120,151,152,],[5,5,5,5,5,5,5,]),'define':([0,5,19,119,120,151,152,],[6,6,6,6,6,6,6,]),'declare':([0,5,19,119,120,151,152,],[7,7,7,7,7,7,7,]),'assign':([0,5,19,119,120,151,152,],[8,8,8,8,8,8,8,]),'condition':([0,5,19,119,120,151,152,],[9,9,9,9,9,9,9,]),'loop':([0,5,19,119,120,151,152,],[10,10,10,10,10,10,10,]),'function_def':([0,5,19,119,120,151,152,],[11,11,11,11,11,11,11,]),'ident':([0,5,14,19,23,28,30,31,50,51,52,58,65,67,68,69,70,71,72,73,74,75,76,77,86,99,115,119,120,131,151,152,154,156,],[15,15,26,15,36,43,43,43,43,43,43,43,26,43,43,43,43,43,43,43,43,43,43,43,43,127,43,15,15,43,15,15,43,43,]),'id':([14,65,],[24,100,]),'variable':([14,65,],[25,25,]),'asign_valor':([15,25,],[27,37,]),'valor':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[39,59,60,78,79,80,87,101,102,103,104,105,106,107,108,109,110,111,117,129,117,157,159,]),'operacion':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'ajson_v':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'function_call':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'aritmetica':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'booleana':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'comparacion':([28,30,31,50,51,52,58,67,68,69,70,71,72,73,74,75,76,77,86,115,131,154,156,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ajson':([34,126,],[62,145,]),'lista_v':([56,114,],[81,128,]),'elemento_v':([56,114,],[82,82,]),'clave_v':([56,114,],[83,83,]),'id_t':([61,123,],[91,141,]),'variable_t':([61,123,],[92,92,]),'lista':([63,125,],[94,142,]),'elemento':([63,125,],[95,95,]),'clave':([63,125,],[96,96,]),'arg':([86,131,],[116,146,]),'tipo':([121,126,140,],[135,144,149,]),'valor_t':([126,],[143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',53),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',54),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',59),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',65),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',66),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',67),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',68),
  ('content -> define','content',1,'p_content','parser_ajs.py',74),
  ('content -> declare','content',1,'p_content','parser_ajs.py',75),
  ('content -> assign','content',1,'p_content','parser_ajs.py',76),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',82),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',83),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',84),
  ('ident -> CADENA_NO_COMILLAS','ident',1,'p_ident_simple','parser_ajs.py',89),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA','ident',4,'p_ident_simple','parser_ajs.py',90),
  ('ident -> CADENA_NO_COMILLAS PUNTO ident','ident',3,'p_ident_recurivo','parser_ajs.py',100),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident','ident',6,'p_ident_recurivo','parser_ajs.py',101),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',112),
  ('asign_valor -> ASIGNACION valor','asign_valor',2,'p_asign_valor','parser_ajs.py',180),
  ('asign_valor -> empty','asign_valor',1,'p_asign_valor','parser_ajs.py',181),
  ('id -> variable asign_valor','id',2,'p_id','parser_ajs.py',202),
  ('id -> variable asign_valor COMA id','id',4,'p_id_varios','parser_ajs.py',208),
  ('variable -> ident','variable',1,'p_variable','parser_ajs.py',216),
  ('variable -> ident DOS_PUNTOS CADENA_NO_COMILLAS','variable',3,'p_variable','parser_ajs.py',217),
  ('assign -> ident asign_valor','assign',2,'p_assign','parser_ajs.py',231),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',337),
  ('valor -> ajson_v','valor',1,'p_valor','parser_ajs.py',338),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',339),
  ('valor -> ident','valor',1,'p_valor_ident','parser_ajs.py',343),
  ('valor -> ENTERO','valor',1,'p_valor_entero','parser_ajs.py',388),
  ('valor -> DECIMAL','valor',1,'p_valor_decimal','parser_ajs.py',395),
  ('valor -> TR','valor',1,'p_valor_bool','parser_ajs.py',400),
  ('valor -> FL','valor',1,'p_valor_bool','parser_ajs.py',401),
  ('valor -> NULL','valor',1,'p_valor_null','parser_ajs.py',406),
  ('valor -> CARACTER','valor',1,'p_valor_caracter','parser_ajs.py',411),
  ('valor -> PARENTESIS_ABRE valor PARENTESIS_CIERRA','valor',3,'p_valor_parentesis','parser_ajs.py',417),
  ('valor -> SUMA valor','valor',2,'p_valor_unary','parser_ajs.py',422),
  ('valor -> RESTA valor','valor',2,'p_valor_unary','parser_ajs.py',423),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',434),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',445),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',450),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',451),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',452),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',458),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',464),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',465),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave_comillas','parser_ajs.py',480),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave_no_comillas','parser_ajs.py',486),
  ('ajson_v -> LLAVE_ABRE lista_v LLAVE_CIERRA','ajson_v',3,'p_ajson_v','parser_ajs.py',492),
  ('lista_v -> elemento_v','lista_v',1,'p_lista_v','parser_ajs.py',497),
  ('lista_v -> elemento_v COMA','lista_v',2,'p_lista_v','parser_ajs.py',498),
  ('lista_v -> elemento_v COMA lista_v','lista_v',3,'p_lista_v','parser_ajs.py',499),
  ('elemento_v -> clave_v DOS_PUNTOS valor','elemento_v',3,'p_elemento_v','parser_ajs.py',505),
  ('clave_v -> CADENA_COMILLAS','clave_v',1,'p_clave_v_comillas','parser_ajs.py',510),
  ('clave_v -> CADENA_NO_COMILLAS','clave_v',1,'p_clave_v_no_comillas','parser_ajs.py',516),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',521),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',522),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',523),
  ('aritmetica -> valor SUMA valor','aritmetica',3,'p_aritmetica_suma_resta','parser_ajs.py',528),
  ('aritmetica -> valor RESTA valor','aritmetica',3,'p_aritmetica_suma_resta','parser_ajs.py',529),
  ('aritmetica -> valor MULTIPLICACION valor','aritmetica',3,'p_aritmetica_mul_div','parser_ajs.py',565),
  ('aritmetica -> valor DIVISION valor','aritmetica',3,'p_aritmetica_mul_div','parser_ajs.py',566),
  ('comparacion -> valor MAYOR valor','comparacion',3,'p_comparacion','parser_ajs.py',592),
  ('comparacion -> valor MENOR valor','comparacion',3,'p_comparacion','parser_ajs.py',593),
  ('comparacion -> valor MAYOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',594),
  ('comparacion -> valor MENOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',595),
  ('comparacion -> valor IGUAL valor','comparacion',3,'p_comparacion_igual','parser_ajs.py',610),
  ('booleana -> valor CONJUNCION valor','booleana',3,'p_booleana','parser_ajs.py',629),
  ('booleana -> valor DISYUNCION valor','booleana',3,'p_booleana','parser_ajs.py',630),
  ('booleana -> NEGACION valor','booleana',2,'p_booleana_negacion','parser_ajs.py',650),
  ('tipo -> INT','tipo',1,'p_tipo_entero','parser_ajs.py',668),
  ('tipo -> FLOAT','tipo',1,'p_tipo_decimal','parser_ajs.py',673),
  ('tipo -> CHARACTER','tipo',1,'p_tipo_caracter','parser_ajs.py',678),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo_booleano','parser_ajs.py',683),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo_cadena','parser_ajs.py',688),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',697),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',698),
  ('loop -> WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',708),
  ('id_t -> variable_t','id_t',1,'p_id_t','parser_ajs.py',718),
  ('id_t -> variable_t COMA id_t','id_t',3,'p_id_t','parser_ajs.py',719),
  ('id_t -> empty','id_t',1,'p_id_t','parser_ajs.py',720),
  ('variable_t -> CADENA_NO_COMILLAS DOS_PUNTOS tipo','variable_t',3,'p_variable_t','parser_ajs.py',726),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id_t PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',734),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id_t PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',735),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',752),
  ('arg -> valor','arg',1,'p_arg','parser_ajs.py',769),
  ('arg -> valor COMA arg','arg',3,'p_arg','parser_ajs.py',770),
  ('arg -> empty','arg',1,'p_arg','parser_ajs.py',771),
]
