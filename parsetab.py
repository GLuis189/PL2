
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftMULTIPLICACIONDIVISIONleftCONJUNCIONDISYUNCIONrightNEGACIONnonassocMENOR_IGUALMENORMAYOR_IGUALMAYORIGUALASIGNACION BOOLEAN CADENA_COMILLAS CADENA_NO_COMILLAS CARACTER CHARACTER COMA CONJUNCION CORCHETE_ABRE CORCHETE_CIERRA DECIMAL DISYUNCION DIVISION DOS_PUNTOS ELSE ENTERO FL FLOAT FUNCTION IF IGUAL INT LET LLAVE_ABRE LLAVE_CIERRA MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MULTIPLICACION NEGACION NULL PARENTESIS_ABRE PARENTESIS_CIERRA PUNTO PUNTO_Y_COMA RESTA RETURN SUMA TR TYPE WHILEprograma : statement\n                | emptyempty : \n    statement : content PUNTO_Y_COMA\n              | content PUNTO_Y_COMA statement\n              | no_semicolon\n              | no_semicolon statement\n    \n    content : define\n            | declare\n            | assign\n    \n    no_semicolon : condition\n                 | loop\n                 | function_def\n    ident : CADENA_NO_COMILLAS\n             | CADENA_NO_COMILLAS PUNTO ident\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA\n             | CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident\n             \n    declare : LET id\n    id : variable\n          | variable COMA id\n          | variable ASIGNACION valor\n          | variable ASIGNACION valor COMA idvariable : ident\n                | ident DOS_PUNTOS tipo\n    assign : variable ASIGNACION valor\n    valor : ident\n             | ENTERO\n             | DECIMAL\n             | operacion\n             | TR\n             | FL\n             | NULL\n             | ajson_v\n             | CARACTER\n             | function_call\n             | PARENTESIS_ABRE valor PARENTESIS_CIERRA\n    \n    define : TYPE CADENA_NO_COMILLAS ASIGNACION ajson\n    ajson : LLAVE_ABRE lista LLAVE_CIERRAlista : elemento\n             | elemento COMA \n             | elemento COMA listaelemento : clave DOS_PUNTOS valor_tvalor_t : tipo\n               | ajsonclave : CADENA_NO_COMILLAS\n             | CADENA_COMILLASajson_v : LLAVE_ABRE lista_v LLAVE_CIERRAlista_v : elemento_v\n               | elemento_v COMA \n               | elemento_v COMA lista_velemento_v : clave_v DOS_PUNTOS valorclave_v : CADENA_NO_COMILLAS\n               | CADENA_COMILLASoperacion : aritmetica\n                 | booleana\n                 | comparacionaritmetica : valor SUMA valor\n                  | valor RESTA valor\n                  | valor MULTIPLICACION valor\n                  | valor DIVISION valorcomparacion : valor MAYOR valor\n                   | valor MENOR valor\n                   | valor MAYOR_IGUAL valor\n                   | valor MENOR_IGUAL valor\n                   | valor IGUAL valorbooleana : valor CONJUNCION valor\n                | valor DISYUNCION valor\n                | NEGACION valortipo : INT\n            | FLOAT\n            | CHARACTER\n            | BOOLEAN\n            | CADENA_NO_COMILLAS\n    \n    condition : IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n              | IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA\n    \n    loop : WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA\n    \n    function_def : FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n                 | FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA\n    \n    function_call : CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA\n                  | CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA\n    arg : valor\n           | valor COMA arg'
    
_lr_action_items = {'$end':([0,1,2,3,5,9,10,11,20,21,32,140,141,158,162,164,165,166,],[-3,0,-1,-2,-6,-11,-12,-13,-4,-7,-5,-74,-76,-75,-80,-78,-79,-77,]),'TYPE':([0,5,9,10,11,20,118,119,140,141,143,145,148,158,162,164,165,166,],[12,12,-11,-12,-13,12,12,12,-74,-76,12,12,12,-75,-80,-78,-79,-77,]),'LET':([0,5,9,10,11,20,118,119,140,141,143,145,148,158,162,164,165,166,],[14,14,-11,-12,-13,14,14,14,-74,-76,14,14,14,-75,-80,-78,-79,-77,]),'IF':([0,5,9,10,11,20,118,119,140,141,143,145,148,158,162,164,165,166,],[16,16,-11,-12,-13,16,16,16,-74,-76,16,16,16,-75,-80,-78,-79,-77,]),'WHILE':([0,5,9,10,11,20,118,119,140,141,143,145,148,158,162,164,165,166,],[17,17,-11,-12,-13,17,17,17,-74,-76,17,17,17,-75,-80,-78,-79,-77,]),'FUNCTION':([0,5,9,10,11,20,118,119,140,141,143,145,148,158,162,164,165,166,],[18,18,-11,-12,-13,18,18,18,-74,-76,18,18,18,-75,-80,-78,-79,-77,]),'CADENA_NO_COMILLAS':([0,5,9,10,11,12,14,18,20,23,27,28,29,31,36,37,49,54,55,58,66,70,71,72,73,74,75,76,77,78,79,80,82,98,99,116,117,118,119,121,123,124,128,133,140,141,143,145,147,148,150,151,154,158,162,164,165,166,],[13,13,-11,-12,-13,22,13,30,13,13,50,50,50,64,13,50,50,86,50,13,96,50,50,50,50,50,50,50,50,50,50,50,50,13,13,86,50,13,13,64,96,64,50,64,-74,-76,13,13,50,13,50,50,50,-75,-80,-78,-79,-77,]),'PUNTO_Y_COMA':([4,6,7,8,13,19,25,26,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,59,60,61,62,63,64,65,67,68,69,88,100,101,102,103,104,105,106,107,108,109,110,111,113,115,122,125,126,127,152,155,156,159,],[20,-8,-9,-10,-14,-23,-18,-19,-15,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,-24,-69,-70,-71,-72,-73,-37,-16,-20,-21,-68,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,-47,-38,-17,-22,-81,157,160,161,163,]),'LLAVE_CIERRA':([5,9,10,11,13,20,21,32,34,39,40,41,42,43,44,45,46,47,48,50,51,52,53,60,61,62,63,64,67,83,84,88,93,94,100,101,102,103,104,105,106,107,108,109,110,111,113,115,116,122,123,125,127,129,130,131,132,135,136,137,138,140,141,153,157,158,160,161,162,163,164,165,166,],[-6,-11,-12,-13,-14,-4,-7,-5,-15,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,-69,-70,-71,-72,-73,-16,115,-48,-68,122,-39,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,-47,-49,-38,-40,-17,-81,-50,-51,140,141,-41,-42,-43,-44,-74,-76,158,162,-75,164,165,-80,166,-78,-79,-77,]),'RETURN':([5,9,10,11,20,21,32,140,141,143,145,146,149,158,162,164,165,166,],[-6,-11,-12,-13,-4,-7,-5,-74,-76,147,150,151,154,-75,-80,-78,-79,-77,]),'DOS_PUNTOS':([13,19,34,67,85,86,87,92,95,96,97,120,125,],[-14,31,-15,-16,117,-52,-53,121,124,-45,-46,133,-17,]),'ASIGNACION':([13,15,19,22,26,34,59,60,61,62,63,64,67,125,],[-14,27,-23,33,37,-15,-24,-69,-70,-71,-72,-73,-16,-17,]),'COMA':([13,19,26,34,39,40,41,42,43,44,45,46,47,48,50,51,52,53,59,60,61,62,63,64,67,69,84,88,94,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,122,125,127,130,136,137,138,],[-14,-23,36,-15,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,-24,-69,-70,-71,-72,-73,-16,99,116,-68,123,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,128,-47,-38,-17,-81,-51,-42,-43,-44,]),'SUMA':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,70,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,70,70,-16,70,70,-68,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,70,-47,-17,-81,70,70,70,70,70,]),'RESTA':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,71,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,71,71,-16,71,71,-68,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,71,-47,-17,-81,71,71,71,71,71,]),'MULTIPLICACION':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,72,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,72,72,-16,72,72,-68,72,72,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,72,-47,-17,-81,72,72,72,72,72,]),'DIVISION':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,73,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,73,73,-16,73,73,-68,73,73,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,-82,73,-47,-17,-81,73,73,73,73,73,]),'CONJUNCION':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,74,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,74,74,-16,74,74,-68,74,74,74,74,-66,-67,-61,-62,-63,-64,-65,-36,-82,74,-47,-17,-81,74,74,74,74,74,]),'DISYUNCION':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,75,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,75,75,-16,75,75,-68,75,75,75,75,-66,-67,-61,-62,-63,-64,-65,-36,-82,75,-47,-17,-81,75,75,75,75,75,]),'MAYOR':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,76,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,76,76,-16,76,76,76,76,76,76,76,76,76,None,None,None,None,None,-36,-82,76,-47,-17,-81,76,76,76,76,76,]),'MENOR':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,77,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,77,77,-16,77,77,77,77,77,77,77,77,77,None,None,None,None,None,-36,-82,77,-47,-17,-81,77,77,77,77,77,]),'MAYOR_IGUAL':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,78,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,78,78,-16,78,78,78,78,78,78,78,78,78,None,None,None,None,None,-36,-82,78,-47,-17,-81,78,78,78,78,78,]),'MENOR_IGUAL':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,79,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,79,79,-16,79,79,79,79,79,79,79,79,79,None,None,None,None,None,-36,-82,79,-47,-17,-81,79,79,79,79,79,]),'IGUAL':([13,34,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,67,69,81,88,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,125,127,130,152,155,156,159,],[-14,-15,80,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,80,80,-16,80,80,80,80,80,80,80,80,80,None,None,None,None,None,-36,-82,80,-47,-17,-81,80,80,80,80,80,]),'PARENTESIS_CIERRA':([13,19,26,34,39,40,41,42,43,44,45,46,47,48,50,51,52,53,56,57,58,59,60,61,62,63,64,67,68,69,81,82,88,91,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,125,126,127,139,],[-14,-23,-19,-15,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-14,-54,-55,-56,89,90,92,-24,-69,-70,-71,-72,-73,-16,-20,-21,111,113,-68,120,-57,-58,-59,-60,-66,-67,-61,-62,-63,-64,-65,-36,127,-82,-83,-47,-17,-22,-81,-84,]),'PUNTO':([13,50,67,],[23,23,98,]),'CORCHETE_ABRE':([13,50,],[24,24,]),'PARENTESIS_ABRE':([16,17,27,28,29,30,37,49,50,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[28,29,49,49,49,58,49,49,82,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'CADENA_COMILLAS':([24,54,66,116,123,],[35,87,97,87,97,]),'ENTERO':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'DECIMAL':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TR':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'FL':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NULL':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'CARACTER':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'LLAVE_ABRE':([27,28,29,33,37,49,55,60,61,62,63,64,70,71,72,73,74,75,76,77,78,79,80,82,89,90,117,124,128,134,142,144,147,150,151,154,],[54,54,54,66,54,54,54,-69,-70,-71,-72,-73,54,54,54,54,54,54,54,54,54,54,54,54,118,119,54,66,54,143,145,148,54,54,54,54,]),'NEGACION':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'INT':([31,121,124,133,],[60,60,60,60,]),'FLOAT':([31,121,124,133,],[61,61,61,61,]),'CHARACTER':([31,121,124,133,],[62,62,62,62,]),'BOOLEAN':([31,121,124,133,],[63,63,63,63,]),'CORCHETE_CIERRA':([35,],[67,]),'ELSE':([140,],[144,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'statement':([0,5,20,118,119,143,145,148,],[2,21,32,131,132,146,149,153,]),'empty':([0,],[3,]),'content':([0,5,20,118,119,143,145,148,],[4,4,4,4,4,4,4,4,]),'no_semicolon':([0,5,20,118,119,143,145,148,],[5,5,5,5,5,5,5,5,]),'define':([0,5,20,118,119,143,145,148,],[6,6,6,6,6,6,6,6,]),'declare':([0,5,20,118,119,143,145,148,],[7,7,7,7,7,7,7,7,]),'assign':([0,5,20,118,119,143,145,148,],[8,8,8,8,8,8,8,8,]),'condition':([0,5,20,118,119,143,145,148,],[9,9,9,9,9,9,9,9,]),'loop':([0,5,20,118,119,143,145,148,],[10,10,10,10,10,10,10,10,]),'function_def':([0,5,20,118,119,143,145,148,],[11,11,11,11,11,11,11,11,]),'variable':([0,5,14,20,36,58,99,118,119,143,145,148,],[15,15,26,15,26,26,26,15,15,15,15,15,]),'ident':([0,5,14,20,23,27,28,29,36,37,49,55,58,70,71,72,73,74,75,76,77,78,79,80,82,98,99,117,118,119,128,143,145,147,148,150,151,154,],[19,19,19,19,34,39,39,39,19,39,39,39,19,39,39,39,39,39,39,39,39,39,39,39,39,125,19,39,19,19,39,19,19,39,19,39,39,39,]),'id':([14,36,58,99,],[25,68,91,126,]),'valor':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[38,56,57,69,81,88,100,101,102,103,104,105,106,107,108,109,110,114,130,114,152,155,156,159,]),'operacion':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'ajson_v':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_call':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'aritmetica':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'booleana':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'comparacion':([27,28,29,37,49,55,70,71,72,73,74,75,76,77,78,79,80,82,117,128,147,150,151,154,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'tipo':([31,121,124,133,],[59,134,137,142,]),'ajson':([33,124,],[65,138,]),'lista_v':([54,116,],[83,129,]),'elemento_v':([54,116,],[84,84,]),'clave_v':([54,116,],[85,85,]),'lista':([66,123,],[93,135,]),'elemento':([66,123,],[94,94,]),'clave':([66,123,],[95,95,]),'arg':([82,128,],[112,139,]),'valor_t':([124,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> statement','programa',1,'p_programa','parser_ajs.py',15),
  ('programa -> empty','programa',1,'p_programa','parser_ajs.py',16),
  ('empty -> <empty>','empty',0,'p_empty','parser_ajs.py',20),
  ('statement -> content PUNTO_Y_COMA','statement',2,'p_statement','parser_ajs.py',25),
  ('statement -> content PUNTO_Y_COMA statement','statement',3,'p_statement','parser_ajs.py',26),
  ('statement -> no_semicolon','statement',1,'p_statement','parser_ajs.py',27),
  ('statement -> no_semicolon statement','statement',2,'p_statement','parser_ajs.py',28),
  ('content -> define','content',1,'p_content','parser_ajs.py',34),
  ('content -> declare','content',1,'p_content','parser_ajs.py',35),
  ('content -> assign','content',1,'p_content','parser_ajs.py',36),
  ('no_semicolon -> condition','no_semicolon',1,'p_no_semicolon','parser_ajs.py',42),
  ('no_semicolon -> loop','no_semicolon',1,'p_no_semicolon','parser_ajs.py',43),
  ('no_semicolon -> function_def','no_semicolon',1,'p_no_semicolon','parser_ajs.py',44),
  ('ident -> CADENA_NO_COMILLAS','ident',1,'p_ident','parser_ajs.py',49),
  ('ident -> CADENA_NO_COMILLAS PUNTO ident','ident',3,'p_ident','parser_ajs.py',50),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA','ident',4,'p_ident','parser_ajs.py',51),
  ('ident -> CADENA_NO_COMILLAS CORCHETE_ABRE CADENA_COMILLAS CORCHETE_CIERRA PUNTO ident','ident',6,'p_ident','parser_ajs.py',52),
  ('declare -> LET id','declare',2,'p_declare','parser_ajs.py',60),
  ('id -> variable','id',1,'p_id','parser_ajs.py',65),
  ('id -> variable COMA id','id',3,'p_id','parser_ajs.py',66),
  ('id -> variable ASIGNACION valor','id',3,'p_id','parser_ajs.py',67),
  ('id -> variable ASIGNACION valor COMA id','id',5,'p_id','parser_ajs.py',68),
  ('variable -> ident','variable',1,'p_variable','parser_ajs.py',72),
  ('variable -> ident DOS_PUNTOS tipo','variable',3,'p_variable','parser_ajs.py',73),
  ('assign -> variable ASIGNACION valor','assign',3,'p_assign','parser_ajs.py',80),
  ('valor -> ident','valor',1,'p_valor','parser_ajs.py',85),
  ('valor -> ENTERO','valor',1,'p_valor','parser_ajs.py',86),
  ('valor -> DECIMAL','valor',1,'p_valor','parser_ajs.py',87),
  ('valor -> operacion','valor',1,'p_valor','parser_ajs.py',88),
  ('valor -> TR','valor',1,'p_valor','parser_ajs.py',89),
  ('valor -> FL','valor',1,'p_valor','parser_ajs.py',90),
  ('valor -> NULL','valor',1,'p_valor','parser_ajs.py',91),
  ('valor -> ajson_v','valor',1,'p_valor','parser_ajs.py',92),
  ('valor -> CARACTER','valor',1,'p_valor','parser_ajs.py',93),
  ('valor -> function_call','valor',1,'p_valor','parser_ajs.py',94),
  ('valor -> PARENTESIS_ABRE valor PARENTESIS_CIERRA','valor',3,'p_valor','parser_ajs.py',95),
  ('define -> TYPE CADENA_NO_COMILLAS ASIGNACION ajson','define',4,'p_define','parser_ajs.py',101),
  ('ajson -> LLAVE_ABRE lista LLAVE_CIERRA','ajson',3,'p_ajson','parser_ajs.py',106),
  ('lista -> elemento','lista',1,'p_lista','parser_ajs.py',110),
  ('lista -> elemento COMA','lista',2,'p_lista','parser_ajs.py',111),
  ('lista -> elemento COMA lista','lista',3,'p_lista','parser_ajs.py',112),
  ('elemento -> clave DOS_PUNTOS valor_t','elemento',3,'p_elemento','parser_ajs.py',116),
  ('valor_t -> tipo','valor_t',1,'p_valor_t','parser_ajs.py',120),
  ('valor_t -> ajson','valor_t',1,'p_valor_t','parser_ajs.py',121),
  ('clave -> CADENA_NO_COMILLAS','clave',1,'p_clave','parser_ajs.py',125),
  ('clave -> CADENA_COMILLAS','clave',1,'p_clave','parser_ajs.py',126),
  ('ajson_v -> LLAVE_ABRE lista_v LLAVE_CIERRA','ajson_v',3,'p_ajson_v','parser_ajs.py',130),
  ('lista_v -> elemento_v','lista_v',1,'p_lista_v','parser_ajs.py',134),
  ('lista_v -> elemento_v COMA','lista_v',2,'p_lista_v','parser_ajs.py',135),
  ('lista_v -> elemento_v COMA lista_v','lista_v',3,'p_lista_v','parser_ajs.py',136),
  ('elemento_v -> clave_v DOS_PUNTOS valor','elemento_v',3,'p_elemento_v','parser_ajs.py',140),
  ('clave_v -> CADENA_NO_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',144),
  ('clave_v -> CADENA_COMILLAS','clave_v',1,'p_clave_v','parser_ajs.py',145),
  ('operacion -> aritmetica','operacion',1,'p_operacion','parser_ajs.py',149),
  ('operacion -> booleana','operacion',1,'p_operacion','parser_ajs.py',150),
  ('operacion -> comparacion','operacion',1,'p_operacion','parser_ajs.py',151),
  ('aritmetica -> valor SUMA valor','aritmetica',3,'p_aritmetica','parser_ajs.py',156),
  ('aritmetica -> valor RESTA valor','aritmetica',3,'p_aritmetica','parser_ajs.py',157),
  ('aritmetica -> valor MULTIPLICACION valor','aritmetica',3,'p_aritmetica','parser_ajs.py',158),
  ('aritmetica -> valor DIVISION valor','aritmetica',3,'p_aritmetica','parser_ajs.py',159),
  ('comparacion -> valor MAYOR valor','comparacion',3,'p_comparacion','parser_ajs.py',173),
  ('comparacion -> valor MENOR valor','comparacion',3,'p_comparacion','parser_ajs.py',174),
  ('comparacion -> valor MAYOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',175),
  ('comparacion -> valor MENOR_IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',176),
  ('comparacion -> valor IGUAL valor','comparacion',3,'p_comparacion','parser_ajs.py',177),
  ('booleana -> valor CONJUNCION valor','booleana',3,'p_booleana','parser_ajs.py',189),
  ('booleana -> valor DISYUNCION valor','booleana',3,'p_booleana','parser_ajs.py',190),
  ('booleana -> NEGACION valor','booleana',2,'p_booleana','parser_ajs.py',191),
  ('tipo -> INT','tipo',1,'p_tipo','parser_ajs.py',202),
  ('tipo -> FLOAT','tipo',1,'p_tipo','parser_ajs.py',203),
  ('tipo -> CHARACTER','tipo',1,'p_tipo','parser_ajs.py',204),
  ('tipo -> BOOLEAN','tipo',1,'p_tipo','parser_ajs.py',205),
  ('tipo -> CADENA_NO_COMILLAS','tipo',1,'p_tipo','parser_ajs.py',206),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','condition',7,'p_condition','parser_ajs.py',212),
  ('condition -> IF PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA ELSE LLAVE_ABRE statement LLAVE_CIERRA','condition',11,'p_condition','parser_ajs.py',213),
  ('loop -> WHILE PARENTESIS_ABRE valor PARENTESIS_CIERRA LLAVE_ABRE statement LLAVE_CIERRA','loop',7,'p_loop','parser_ajs.py',219),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',13,'p_function_def','parser_ajs.py',225),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE id PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',226),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE statement RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',12,'p_function_def','parser_ajs.py',227),
  ('function_def -> FUNCTION CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA DOS_PUNTOS tipo LLAVE_ABRE RETURN valor PUNTO_Y_COMA LLAVE_CIERRA','function_def',11,'p_function_def','parser_ajs.py',228),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE arg PARENTESIS_CIERRA','function_call',4,'p_function_call','parser_ajs.py',234),
  ('function_call -> CADENA_NO_COMILLAS PARENTESIS_ABRE PARENTESIS_CIERRA','function_call',3,'p_function_call','parser_ajs.py',235),
  ('arg -> valor','arg',1,'p_arg','parser_ajs.py',240),
  ('arg -> valor COMA arg','arg',3,'p_arg','parser_ajs.py',241),
]
